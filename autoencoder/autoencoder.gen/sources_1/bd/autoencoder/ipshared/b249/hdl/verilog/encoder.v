// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="encoder_encoder,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.156250,HLS_SYN_LAT=13,HLS_SYN_TPT=8,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1502,HLS_SYN_LUT=6847,HLS_VERSION=2024_1}" *)

module encoder (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_112,
        input_112_ap_vld,
        input_112_ap_ack,
        layer4_out_0,
        layer4_out_0_ap_vld,
        layer4_out_0_ap_ack,
        layer4_out_1,
        layer4_out_1_ap_vld,
        layer4_out_1_ap_ack
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] input_112;
input   input_112_ap_vld;
output   input_112_ap_ack;
output  [15:0] layer4_out_0;
output   layer4_out_0_ap_vld;
input   layer4_out_0_ap_ack;
output  [15:0] layer4_out_1;
output   layer4_out_1_ap_vld;
input   layer4_out_1_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_112_ap_ack;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_subdone;
reg    input_112_blk_n;
wire    ap_block_pp0_stage0;
reg    layer4_out_0_blk_n;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg    layer4_out_1_blk_n;
reg   [15:0] layer2_out_reg_238;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg   [15:0] layer2_out_1_reg_243;
reg   [15:0] layer2_out_2_reg_248;
reg   [15:0] layer2_out_3_reg_253;
reg   [15:0] layer2_out_4_reg_258;
reg   [15:0] layer2_out_5_reg_263;
reg   [15:0] layer2_out_6_reg_268;
reg   [15:0] layer2_out_7_reg_273;
reg   [15:0] layer2_out_8_reg_278;
reg   [15:0] layer2_out_9_reg_283;
reg   [15:0] layer2_out_10_reg_288;
reg   [15:0] layer2_out_11_reg_293;
reg   [15:0] layer2_out_12_reg_298;
reg   [15:0] layer2_out_13_reg_303;
reg   [15:0] layer2_out_14_reg_308;
reg   [15:0] layer2_out_15_reg_313;
reg   [15:0] layer3_out_reg_318;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
reg   [15:0] layer3_out_1_reg_323;
reg   [15:0] layer3_out_2_reg_328;
reg   [15:0] layer3_out_3_reg_333;
reg   [15:0] layer3_out_4_reg_338;
reg   [15:0] layer3_out_5_reg_343;
reg   [15:0] layer3_out_6_reg_348;
reg   [15:0] layer3_out_7_reg_353;
reg   [15:0] layer3_out_8_reg_358;
reg   [15:0] layer3_out_9_reg_363;
reg   [15:0] layer3_out_10_reg_368;
reg   [15:0] layer3_out_11_reg_373;
reg   [15:0] layer3_out_12_reg_378;
reg   [15:0] layer3_out_13_reg_383;
reg   [15:0] layer3_out_14_reg_388;
reg   [15:0] layer3_out_15_reg_393;
reg    ap_block_state13_pp0_stage4_iter1;
reg    ap_block_state13_io;
reg    ap_block_pp0_stage4_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    regslice_both_layer4_out_0_U_apdone_blk;
wire    regslice_both_layer4_out_1_U_apdone_blk;
reg    ap_block_state14_pp0_stage5_iter1;
reg    ap_block_state14_io;
reg    ap_block_pp0_stage5_subdone;
wire    grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_start;
wire    grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_done;
wire    grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_idle;
wire    grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_ready;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_0;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_1;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_2;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_3;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_4;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_5;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_6;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_7;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_8;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_9;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_10;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_11;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_12;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_13;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_14;
wire   [15:0] grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_15;
reg    grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call9;
reg    ap_block_pp0_stage0_11001_ignoreCallOp16;
wire    ap_block_pp0_stage1_11001_ignoreCallOp17;
wire    call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_ready;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_0;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_1;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_2;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_3;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_4;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_5;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_6;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_7;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_8;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_9;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_10;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_11;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_12;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_13;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_14;
wire   [15:0] call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_15;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_start;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_done;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_idle;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_ready;
reg    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_ce;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_return_0;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_return_1;
wire    ap_block_pp0_stage3_11001_ignoreCallOp51;
reg    ap_block_state13_pp0_stage4_iter1_ignore_call43;
reg    ap_block_pp0_stage4_11001_ignoreCallOp52;
reg    ap_block_state14_pp0_stage5_iter1_ignore_call43;
reg    ap_block_pp0_stage5_11001_ignoreCallOp53;
wire    ap_block_pp0_stage6_11001_ignoreCallOp54;
wire    ap_block_pp0_stage7_11001_ignoreCallOp55;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call43;
reg    ap_block_pp0_stage0_11001_ignoreCallOp56;
wire    ap_block_pp0_stage1_11001_ignoreCallOp57;
wire    ap_block_pp0_stage2_11001_ignoreCallOp58;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_CS_fsm_pp0_stage6;
reg    grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_start_reg;
reg    grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_onepulse_ap_start;
wire    ap_block_pp0_stage0_ignoreCallOp16;
wire    ap_block_pp0_stage2_ignoreCallOp34;
reg    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_start_reg;
wire    ap_block_pp0_stage3_ignoreCallOp51;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_pp0_stage4_01001;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage3_11001;
reg    ap_block_pp0_stage4_subdone;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_block_pp0_stage5_11001;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_pp0_stage7_11001;
wire    ap_enable_pp0;
reg    layer4_out_0_ap_vld_int_regslice;
wire    layer4_out_0_ap_ack_int_regslice;
wire    regslice_both_layer4_out_0_U_vld_out;
reg    layer4_out_1_ap_vld_int_regslice;
wire    layer4_out_1_ap_ack_int_regslice;
wire    regslice_both_layer4_out_1_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_start_reg = 1'b0;
#0 grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_start_reg = 1'b0;
end

encoder_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_start),
    .ap_done(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_done),
    .ap_idle(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_idle),
    .ap_ready(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_ready),
    .data_val(input_112),
    .ap_return_0(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_0),
    .ap_return_1(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_1),
    .ap_return_2(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_2),
    .ap_return_3(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_3),
    .ap_return_4(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_4),
    .ap_return_5(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_5),
    .ap_return_6(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_6),
    .ap_return_7(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_7),
    .ap_return_8(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_8),
    .ap_return_9(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_9),
    .ap_return_10(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_10),
    .ap_return_11(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_11),
    .ap_return_12(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_12),
    .ap_return_13(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_13),
    .ap_return_14(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_14),
    .ap_return_15(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_15),
    .ap_ce(grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_ce)
);

encoder_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60(
    .ap_ready(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_ready),
    .data_0_val(layer2_out_reg_238),
    .data_1_val(layer2_out_1_reg_243),
    .data_2_val(layer2_out_2_reg_248),
    .data_3_val(layer2_out_3_reg_253),
    .data_4_val(layer2_out_4_reg_258),
    .data_5_val(layer2_out_5_reg_263),
    .data_6_val(layer2_out_6_reg_268),
    .data_7_val(layer2_out_7_reg_273),
    .data_8_val(layer2_out_8_reg_278),
    .data_9_val(layer2_out_9_reg_283),
    .data_10_val(layer2_out_10_reg_288),
    .data_11_val(layer2_out_11_reg_293),
    .data_12_val(layer2_out_12_reg_298),
    .data_13_val(layer2_out_13_reg_303),
    .data_14_val(layer2_out_14_reg_308),
    .data_15_val(layer2_out_15_reg_313),
    .ap_return_0(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_0),
    .ap_return_1(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_1),
    .ap_return_2(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_2),
    .ap_return_3(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_3),
    .ap_return_4(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_4),
    .ap_return_5(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_5),
    .ap_return_6(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_6),
    .ap_return_7(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_7),
    .ap_return_8(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_8),
    .ap_return_9(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_9),
    .ap_return_10(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_10),
    .ap_return_11(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_11),
    .ap_return_12(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_12),
    .ap_return_13(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_13),
    .ap_return_14(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_14),
    .ap_return_15(call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_15),
    .ap_rst(ap_rst)
);

encoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_start),
    .ap_done(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_done),
    .ap_idle(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_idle),
    .ap_ready(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_ready),
    .ap_ce(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_ce),
    .data_0_val(layer3_out_reg_318),
    .data_1_val(layer3_out_1_reg_323),
    .data_2_val(layer3_out_2_reg_328),
    .data_3_val(layer3_out_3_reg_333),
    .data_4_val(layer3_out_4_reg_338),
    .data_5_val(layer3_out_5_reg_343),
    .data_6_val(layer3_out_6_reg_348),
    .data_7_val(layer3_out_7_reg_353),
    .data_8_val(layer3_out_8_reg_358),
    .data_9_val(layer3_out_9_reg_363),
    .data_10_val(layer3_out_10_reg_368),
    .data_11_val(layer3_out_11_reg_373),
    .data_12_val(layer3_out_12_reg_378),
    .data_13_val(layer3_out_13_reg_383),
    .data_14_val(layer3_out_14_reg_388),
    .data_15_val(layer3_out_15_reg_393),
    .ap_return_0(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_return_0),
    .ap_return_1(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_return_1)
);

encoder_regslice_both #(
    .DataWidth( 16 ))
regslice_both_layer4_out_0_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_return_0),
    .vld_in(layer4_out_0_ap_vld_int_regslice),
    .ack_in(layer4_out_0_ap_ack_int_regslice),
    .data_out(layer4_out_0),
    .vld_out(regslice_both_layer4_out_0_U_vld_out),
    .ack_out(layer4_out_0_ap_ack),
    .apdone_blk(regslice_both_layer4_out_0_U_apdone_blk)
);

encoder_regslice_both #(
    .DataWidth( 16 ))
regslice_both_layer4_out_1_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_return_1),
    .vld_in(layer4_out_1_ap_vld_int_regslice),
    .ack_in(layer4_out_1_ap_ack_int_regslice),
    .data_out(layer4_out_1),
    .vld_out(regslice_both_layer4_out_1_U_vld_out),
    .ack_out(layer4_out_1_ap_ack),
    .apdone_blk(regslice_both_layer4_out_1_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_start_reg <= 1'b1;
        end else if ((grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_ready == 1'b1)) begin
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_start_reg <= 1'b1;
        end else if ((grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_ready == 1'b1)) begin
            grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        layer2_out_10_reg_288 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_10;
        layer2_out_11_reg_293 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_11;
        layer2_out_12_reg_298 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_12;
        layer2_out_13_reg_303 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_13;
        layer2_out_14_reg_308 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_14;
        layer2_out_15_reg_313 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_15;
        layer2_out_1_reg_243 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_1;
        layer2_out_2_reg_248 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_2;
        layer2_out_3_reg_253 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_3;
        layer2_out_4_reg_258 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_4;
        layer2_out_5_reg_263 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_5;
        layer2_out_6_reg_268 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_6;
        layer2_out_7_reg_273 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_7;
        layer2_out_8_reg_278 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_8;
        layer2_out_9_reg_283 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_9;
        layer2_out_reg_238 <= grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        layer3_out_10_reg_368 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_10;
        layer3_out_11_reg_373 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_11;
        layer3_out_12_reg_378 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_12;
        layer3_out_13_reg_383 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_13;
        layer3_out_14_reg_388 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_14;
        layer3_out_15_reg_393 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_15;
        layer3_out_1_reg_323 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_1;
        layer3_out_2_reg_328 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_2;
        layer3_out_3_reg_333 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_3;
        layer3_out_4_reg_338 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_4;
        layer3_out_5_reg_343 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_5;
        layer3_out_6_reg_348 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_6;
        layer3_out_7_reg_353 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_7;
        layer3_out_8_reg_358 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_8;
        layer3_out_9_reg_363 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_9;
        layer3_out_reg_318 <= call_ret_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_60_ap_return_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp58) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp57) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp56) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp55) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp54) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp53) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp52) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp51) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp17) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp16) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_onepulse_ap_start = 1'b1;
    end else begin
        grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_onepulse_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_112_ap_ack = 1'b1;
    end else begin
        input_112_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_112_blk_n = input_112_ap_vld;
    end else begin
        input_112_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        layer4_out_0_ap_vld_int_regslice = 1'b1;
    end else begin
        layer4_out_0_ap_vld_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        layer4_out_0_blk_n = layer4_out_0_ap_ack_int_regslice;
    end else begin
        layer4_out_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        layer4_out_1_ap_vld_int_regslice = 1'b1;
    end else begin
        layer4_out_1_ap_vld_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        layer4_out_1_blk_n = layer4_out_1_ap_ack_int_regslice;
    end else begin
        layer4_out_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_idle_pp0_1to1 == 1'b1) & (ap_start == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if (((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp16 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_ignore_call9));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp56 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_ignore_call43));
end

assign ap_block_pp0_stage0_ignoreCallOp16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp57 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp58 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_ignoreCallOp34 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp51 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_ignoreCallOp51 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state13_pp0_stage4_iter1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state13_io) | (1'b1 == ap_block_state13_pp0_stage4_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage4_11001_ignoreCallOp52 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state13_pp0_stage4_iter1_ignore_call43) | (1'b1 == ap_block_state13_io)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state13_io) | (1'b1 == ap_block_state13_pp0_stage4_iter1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state14_io) | (1'b1 == ap_block_state14_pp0_stage5_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage5_11001_ignoreCallOp53 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state14_pp0_stage5_iter1_ignore_call43) | (1'b1 == ap_block_state14_io)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state14_io) | (1'b1 == ap_block_state14_pp0_stage5_iter1)));
end

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001_ignoreCallOp54 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001_ignoreCallOp55 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_io = ((layer4_out_1_ap_ack_int_regslice == 1'b0) | (layer4_out_0_ap_ack_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage4_iter1 = ((layer4_out_1_ap_ack_int_regslice == 1'b0) | (layer4_out_0_ap_ack_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage4_iter1_ignore_call43 = ((layer4_out_1_ap_ack_int_regslice == 1'b0) | (layer4_out_0_ap_ack_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state14_io = ((layer4_out_1_ap_ack_int_regslice == 1'b0) | (layer4_out_0_ap_ack_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp0_stage5_iter1 = ((regslice_both_layer4_out_1_U_apdone_blk == 1'b1) | (regslice_both_layer4_out_0_U_apdone_blk == 1'b1) | (layer4_out_1_ap_ack_int_regslice == 1'b0) | (layer4_out_0_ap_ack_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp0_stage5_iter1_ignore_call43 = ((regslice_both_layer4_out_1_U_apdone_blk == 1'b1) | (regslice_both_layer4_out_0_U_apdone_blk == 1'b1) | (layer4_out_1_ap_ack_int_regslice == 1'b0) | (layer4_out_0_ap_ack_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (input_112_ap_vld == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call43 = (input_112_ap_vld == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call9 = (input_112_ap_vld == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_start = grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_80_ap_start_reg;

assign grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_start = (grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_onepulse_ap_start | grp_dense_latency_ap_uint_1_ap_fixed_16_6_5_3_0_config2_s_fu_54_ap_start_reg);

assign layer4_out_0_ap_vld = regslice_both_layer4_out_0_U_vld_out;

assign layer4_out_1_ap_vld = regslice_both_layer4_out_1_U_vld_out;

endmodule //encoder
