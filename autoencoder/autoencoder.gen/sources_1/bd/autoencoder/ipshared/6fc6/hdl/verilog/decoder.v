// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="decoder_decoder,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.178500,HLS_SYN_LAT=29,HLS_SYN_TPT=8,HLS_SYN_MEM=9,HLS_SYN_DSP=0,HLS_SYN_FF=7448,HLS_SYN_LUT=13127,HLS_VERSION=2024_1}" *)

module decoder (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_114_0,
        input_114_0_ap_vld,
        input_114_0_ap_ack,
        input_114_1,
        input_114_1_ap_vld,
        input_114_1_ap_ack,
        layer5_out,
        layer5_out_ap_vld,
        layer5_out_ap_ack
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] input_114_0;
input   input_114_0_ap_vld;
output   input_114_0_ap_ack;
input  [15:0] input_114_1;
input   input_114_1_ap_vld;
output   input_114_1_ap_ack;
output  [255:0] layer5_out;
output   layer5_out_ap_vld;
input   layer5_out_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_114_0_ap_ack;
reg input_114_1_ap_ack;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_subdone;
reg    input_114_0_blk_n;
wire    ap_block_pp0_stage0;
reg    input_114_1_blk_n;
reg    layer5_out_blk_n;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_pp0_stage0_11001;
reg   [15:0] layer3_out_reg_345;
reg   [15:0] layer3_out_1_reg_350;
reg   [15:0] layer3_out_2_reg_355;
reg   [15:0] layer3_out_3_reg_360;
reg   [15:0] layer3_out_4_reg_365;
reg   [15:0] layer3_out_5_reg_370;
reg   [15:0] layer3_out_6_reg_375;
reg   [15:0] layer3_out_7_reg_380;
reg   [15:0] layer3_out_8_reg_385;
reg   [15:0] layer3_out_9_reg_390;
reg   [15:0] layer3_out_10_reg_395;
reg   [15:0] layer3_out_11_reg_400;
reg   [15:0] layer3_out_12_reg_405;
reg   [15:0] layer3_out_13_reg_410;
reg   [15:0] layer3_out_14_reg_415;
reg   [15:0] layer3_out_15_reg_420;
reg   [15:0] layer4_out_reg_425;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
reg   [15:0] layer4_out_1_reg_430;
reg   [15:0] layer4_out_2_reg_435;
reg   [15:0] layer4_out_3_reg_440;
reg   [15:0] layer4_out_4_reg_445;
reg   [15:0] layer4_out_5_reg_450;
reg   [15:0] layer4_out_6_reg_455;
reg   [15:0] layer4_out_7_reg_460;
reg   [15:0] layer4_out_8_reg_465;
reg   [15:0] layer4_out_9_reg_470;
reg   [15:0] layer4_out_10_reg_475;
reg   [15:0] layer4_out_11_reg_480;
reg   [15:0] layer4_out_12_reg_485;
reg   [15:0] layer4_out_13_reg_490;
reg   [15:0] layer4_out_14_reg_495;
reg   [15:0] layer4_out_15_reg_500;
wire   [255:0] grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_return;
reg    ap_block_state29_pp0_stage4_iter3;
reg    ap_block_pp0_stage4_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    regslice_both_layer5_out_U_apdone_blk;
reg    ap_block_state30_pp0_stage5_iter3;
reg    ap_block_pp0_stage5_subdone;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_done;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_idle;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ready;
reg    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ce;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_0;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_1;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_2;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_3;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_4;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_5;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_6;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_7;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_8;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_9;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_10;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_11;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_12;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_13;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_14;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_15;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call10;
reg    ap_block_pp0_stage0_11001_ignoreCallOp33;
wire    ap_block_pp0_stage1_11001_ignoreCallOp34;
wire    ap_block_pp0_stage2_11001_ignoreCallOp35;
wire    ap_block_pp0_stage3_11001_ignoreCallOp36;
reg    ap_block_state29_pp0_stage4_iter3_ignore_call10;
reg    ap_block_pp0_stage4_11001_ignoreCallOp37;
reg    ap_block_state30_pp0_stage5_iter3_ignore_call10;
reg    ap_block_pp0_stage5_11001_ignoreCallOp38;
wire    ap_block_pp0_stage6_11001_ignoreCallOp39;
wire    ap_block_pp0_stage7_11001_ignoreCallOp40;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_CS_fsm_pp0_stage6;
wire    call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_ready;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_0;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_1;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_2;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_3;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_4;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_5;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_6;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_7;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_8;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_9;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_10;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_11;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_12;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_13;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_14;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_15;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_done;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_idle;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ready;
reg    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ce;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_0;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_1;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_2;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_3;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_4;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_5;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_6;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_7;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_8;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_9;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_10;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_11;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_12;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_13;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_14;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_15;
wire    ap_block_pp0_stage1_11001_ignoreCallOp75;
wire    ap_block_pp0_stage2_11001_ignoreCallOp76;
wire    ap_block_pp0_stage3_11001_ignoreCallOp77;
reg    ap_block_state29_pp0_stage4_iter3_ignore_call44;
reg    ap_block_pp0_stage4_11001_ignoreCallOp78;
reg    ap_block_state30_pp0_stage5_iter3_ignore_call44;
reg    ap_block_pp0_stage5_11001_ignoreCallOp79;
wire    ap_block_pp0_stage6_11001_ignoreCallOp80;
wire    ap_block_pp0_stage7_11001_ignoreCallOp81;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call44;
reg    ap_block_pp0_stage0_11001_ignoreCallOp82;
wire    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start;
wire    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_done;
wire    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_idle;
wire    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ready;
reg    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ce;
wire    ap_block_pp0_stage3_11001_ignoreCallOp101;
reg    ap_block_state29_pp0_stage4_iter3_ignore_call61;
reg    ap_block_pp0_stage4_11001_ignoreCallOp102;
reg    ap_block_state30_pp0_stage5_iter3_ignore_call61;
reg    ap_block_pp0_stage5_11001_ignoreCallOp103;
wire    ap_block_pp0_stage6_11001_ignoreCallOp104;
wire    ap_block_pp0_stage7_11001_ignoreCallOp105;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call61;
reg    ap_block_pp0_stage0_11001_ignoreCallOp106;
wire    ap_block_pp0_stage1_11001_ignoreCallOp107;
wire    ap_block_pp0_stage2_11001_ignoreCallOp108;
reg    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg;
reg    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_onepulse_ap_start;
wire    ap_block_pp0_stage0_ignoreCallOp33;
wire    ap_block_pp0_stage0_ignoreCallOp58;
reg    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg;
wire    ap_block_pp0_stage1_ignoreCallOp75;
reg    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg;
wire    ap_block_pp0_stage3_ignoreCallOp101;
reg    ap_block_pp0_stage4_01001;
wire    ap_block_pp0_stage2;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage3_11001;
reg    ap_block_pp0_stage4_subdone;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
reg    ap_block_pp0_stage5_11001;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_pp0_stage7_11001;
wire    ap_enable_pp0;
reg    layer5_out_ap_vld_int_regslice;
wire    layer5_out_ap_ack_int_regslice;
wire    regslice_both_layer5_out_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg = 1'b0;
#0 grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg = 1'b0;
#0 grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg = 1'b0;
end

decoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start),
    .ap_done(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_done),
    .ap_idle(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_idle),
    .ap_ready(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ready),
    .ap_ce(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ce),
    .data_0_val(input_114_0),
    .data_1_val(input_114_1),
    .ap_return_0(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_0),
    .ap_return_1(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_1),
    .ap_return_2(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_2),
    .ap_return_3(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_3),
    .ap_return_4(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_4),
    .ap_return_5(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_5),
    .ap_return_6(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_6),
    .ap_return_7(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_7),
    .ap_return_8(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_8),
    .ap_return_9(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_9),
    .ap_return_10(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_10),
    .ap_return_11(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_11),
    .ap_return_12(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_12),
    .ap_return_13(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_13),
    .ap_return_14(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_14),
    .ap_return_15(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_15)
);

decoder_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67(
    .ap_ready(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_ready),
    .data_0_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_0),
    .data_1_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_1),
    .data_2_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_2),
    .data_3_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_3),
    .data_4_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_4),
    .data_5_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_5),
    .data_6_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_6),
    .data_7_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_7),
    .data_8_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_8),
    .data_9_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_9),
    .data_10_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_10),
    .data_11_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_11),
    .data_12_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_12),
    .data_13_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_13),
    .data_14_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_14),
    .data_15_val(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_15),
    .ap_return_0(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_0),
    .ap_return_1(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_1),
    .ap_return_2(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_2),
    .ap_return_3(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_3),
    .ap_return_4(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_4),
    .ap_return_5(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_5),
    .ap_return_6(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_6),
    .ap_return_7(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_7),
    .ap_return_8(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_8),
    .ap_return_9(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_9),
    .ap_return_10(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_10),
    .ap_return_11(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_11),
    .ap_return_12(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_12),
    .ap_return_13(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_13),
    .ap_return_14(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_14),
    .ap_return_15(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_15),
    .ap_rst(ap_rst)
);

decoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start),
    .ap_done(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_done),
    .ap_idle(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_idle),
    .ap_ready(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ready),
    .ap_ce(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ce),
    .data_0_val(layer3_out_reg_345),
    .data_1_val(layer3_out_1_reg_350),
    .data_2_val(layer3_out_2_reg_355),
    .data_3_val(layer3_out_3_reg_360),
    .data_4_val(layer3_out_4_reg_365),
    .data_5_val(layer3_out_5_reg_370),
    .data_6_val(layer3_out_6_reg_375),
    .data_7_val(layer3_out_7_reg_380),
    .data_8_val(layer3_out_8_reg_385),
    .data_9_val(layer3_out_9_reg_390),
    .data_10_val(layer3_out_10_reg_395),
    .data_11_val(layer3_out_11_reg_400),
    .data_12_val(layer3_out_12_reg_405),
    .data_13_val(layer3_out_13_reg_410),
    .data_14_val(layer3_out_14_reg_415),
    .data_15_val(layer3_out_15_reg_420),
    .ap_return_0(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_0),
    .ap_return_1(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_1),
    .ap_return_2(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_2),
    .ap_return_3(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_3),
    .ap_return_4(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_4),
    .ap_return_5(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_5),
    .ap_return_6(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_6),
    .ap_return_7(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_7),
    .ap_return_8(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_8),
    .ap_return_9(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_9),
    .ap_return_10(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_10),
    .ap_return_11(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_11),
    .ap_return_12(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_12),
    .ap_return_13(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_13),
    .ap_return_14(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_14),
    .ap_return_15(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_15)
);

decoder_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start),
    .ap_done(grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_done),
    .ap_idle(grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_idle),
    .ap_ready(grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ready),
    .ap_ce(grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ce),
    .data_0_val(layer4_out_reg_425),
    .data_1_val(layer4_out_1_reg_430),
    .data_2_val(layer4_out_2_reg_435),
    .data_3_val(layer4_out_3_reg_440),
    .data_4_val(layer4_out_4_reg_445),
    .data_5_val(layer4_out_5_reg_450),
    .data_6_val(layer4_out_6_reg_455),
    .data_7_val(layer4_out_7_reg_460),
    .data_8_val(layer4_out_8_reg_465),
    .data_9_val(layer4_out_9_reg_470),
    .data_10_val(layer4_out_10_reg_475),
    .data_11_val(layer4_out_11_reg_480),
    .data_12_val(layer4_out_12_reg_485),
    .data_13_val(layer4_out_13_reg_490),
    .data_14_val(layer4_out_14_reg_495),
    .data_15_val(layer4_out_15_reg_500),
    .ap_return(grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_return)
);

decoder_regslice_both #(
    .DataWidth( 256 ))
regslice_both_layer5_out_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_return),
    .vld_in(layer5_out_ap_vld_int_regslice),
    .ack_in(layer5_out_ap_ack_int_regslice),
    .data_out(layer5_out),
    .vld_out(regslice_both_layer5_out_U_vld_out),
    .ack_out(layer5_out_ap_ack),
    .apdone_blk(regslice_both_layer5_out_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp33) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg <= 1'b1;
        end else if ((grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ready == 1'b1)) begin
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg <= 1'b1;
        end else if ((grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ready == 1'b1)) begin
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg <= 1'b1;
        end else if ((grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ready == 1'b1)) begin
            grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer3_out_10_reg_395 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_10;
        layer3_out_11_reg_400 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_11;
        layer3_out_12_reg_405 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_12;
        layer3_out_13_reg_410 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_13;
        layer3_out_14_reg_415 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_14;
        layer3_out_15_reg_420 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_15;
        layer3_out_1_reg_350 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_1;
        layer3_out_2_reg_355 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_2;
        layer3_out_3_reg_360 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_3;
        layer3_out_4_reg_365 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_4;
        layer3_out_5_reg_370 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_5;
        layer3_out_6_reg_375 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_6;
        layer3_out_7_reg_380 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_7;
        layer3_out_8_reg_385 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_8;
        layer3_out_9_reg_390 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_9;
        layer3_out_reg_345 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        layer4_out_10_reg_475 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_10;
        layer4_out_11_reg_480 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_11;
        layer4_out_12_reg_485 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_12;
        layer4_out_13_reg_490 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_13;
        layer4_out_14_reg_495 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_14;
        layer4_out_15_reg_500 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_15;
        layer4_out_1_reg_430 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_1;
        layer4_out_2_reg_435 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_2;
        layer4_out_3_reg_440 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_3;
        layer4_out_4_reg_445 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_4;
        layer4_out_5_reg_450 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_5;
        layer4_out_6_reg_455 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_6;
        layer4_out_7_reg_460 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_7;
        layer4_out_8_reg_465 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_8;
        layer4_out_9_reg_470 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_9;
        layer4_out_reg_425 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp40) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp39) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp38) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp37) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp36) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp35) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp34) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp33) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_onepulse_ap_start = 1'b1;
    end else begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_onepulse_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp82) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp81) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp80) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp79) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp78) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp77) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp76) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp75) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp108) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp107) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp106) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp105) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp104) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp103) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp102) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp101) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ce = 1'b1;
    end else begin
        grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_114_0_ap_ack = 1'b1;
    end else begin
        input_114_0_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_114_0_blk_n = input_114_0_ap_vld;
    end else begin
        input_114_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_114_1_ap_ack = 1'b1;
    end else begin
        input_114_1_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_114_1_blk_n = input_114_1_ap_vld;
    end else begin
        input_114_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        layer5_out_ap_vld_int_regslice = 1'b1;
    end else begin
        layer5_out_ap_vld_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        layer5_out_blk_n = layer5_out_ap_ack_int_regslice;
    end else begin
        layer5_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp106 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_ignore_call61));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp33 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_ignore_call10));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp82 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_ignore_call44));
end

assign ap_block_pp0_stage0_ignoreCallOp33 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp58 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp107 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp34 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp75 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_ignoreCallOp75 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp108 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp35 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp76 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp101 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp36 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp77 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_ignoreCallOp101 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state29_pp0_stage4_iter3));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state29_pp0_stage4_iter3) | (layer5_out_ap_ack_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage4_11001_ignoreCallOp102 = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state29_pp0_stage4_iter3_ignore_call61) | (layer5_out_ap_ack_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage4_11001_ignoreCallOp37 = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state29_pp0_stage4_iter3_ignore_call10) | (layer5_out_ap_ack_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage4_11001_ignoreCallOp78 = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state29_pp0_stage4_iter3_ignore_call44) | (layer5_out_ap_ack_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state29_pp0_stage4_iter3) | (layer5_out_ap_ack_int_regslice == 1'b0)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state30_pp0_stage5_iter3) | (layer5_out_ap_ack_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage5_11001_ignoreCallOp103 = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state30_pp0_stage5_iter3_ignore_call61) | (layer5_out_ap_ack_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage5_11001_ignoreCallOp38 = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state30_pp0_stage5_iter3_ignore_call10) | (layer5_out_ap_ack_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage5_11001_ignoreCallOp79 = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state30_pp0_stage5_iter3_ignore_call44) | (layer5_out_ap_ack_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state30_pp0_stage5_iter3) | (layer5_out_ap_ack_int_regslice == 1'b0)));
end

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001_ignoreCallOp104 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001_ignoreCallOp39 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001_ignoreCallOp80 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001_ignoreCallOp105 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001_ignoreCallOp40 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001_ignoreCallOp81 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((input_114_1_ap_vld == 1'b0) | (input_114_0_ap_vld == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call10 = ((input_114_1_ap_vld == 1'b0) | (input_114_0_ap_vld == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call44 = ((input_114_1_ap_vld == 1'b0) | (input_114_0_ap_vld == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call61 = ((input_114_1_ap_vld == 1'b0) | (input_114_0_ap_vld == 1'b0));
end

always @ (*) begin
    ap_block_state29_pp0_stage4_iter3 = (layer5_out_ap_ack_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state29_pp0_stage4_iter3_ignore_call10 = (layer5_out_ap_ack_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state29_pp0_stage4_iter3_ignore_call44 = (layer5_out_ap_ack_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state29_pp0_stage4_iter3_ignore_call61 = (layer5_out_ap_ack_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state30_pp0_stage5_iter3 = ((regslice_both_layer5_out_U_apdone_blk == 1'b1) | (layer5_out_ap_ack_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state30_pp0_stage5_iter3_ignore_call10 = ((regslice_both_layer5_out_U_apdone_blk == 1'b1) | (layer5_out_ap_ack_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state30_pp0_stage5_iter3_ignore_call44 = ((regslice_both_layer5_out_U_apdone_blk == 1'b1) | (layer5_out_ap_ack_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state30_pp0_stage5_iter3_ignore_call61 = ((regslice_both_layer5_out_U_apdone_blk == 1'b1) | (layer5_out_ap_ack_int_regslice == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start = (grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_onepulse_ap_start | grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg);

assign grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start = grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg;

assign grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start = grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg;

assign layer5_out_ap_vld = regslice_both_layer5_out_U_vld_out;

endmodule //decoder
