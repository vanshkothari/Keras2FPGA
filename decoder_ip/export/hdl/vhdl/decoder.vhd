-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity decoder is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_114_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_114_0_ap_vld : IN STD_LOGIC;
    input_114_0_ap_ack : OUT STD_LOGIC;
    input_114_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_114_1_ap_vld : IN STD_LOGIC;
    input_114_1_ap_ack : OUT STD_LOGIC;
    layer5_out : OUT STD_LOGIC_VECTOR (255 downto 0);
    layer5_out_ap_vld : OUT STD_LOGIC;
    layer5_out_ap_ack : IN STD_LOGIC );
end;


architecture behav of decoder is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "decoder_decoder,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.178500,HLS_SYN_LAT=29,HLS_SYN_TPT=8,HLS_SYN_MEM=9,HLS_SYN_DSP=0,HLS_SYN_FF=7448,HLS_SYN_LUT=13127,HLS_VERSION=2024_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal input_114_0_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal input_114_1_blk_n : STD_LOGIC;
    signal layer5_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal layer3_out_reg_345 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_1_reg_350 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_2_reg_355 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_3_reg_360 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_4_reg_365 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_5_reg_370 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_6_reg_375 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_7_reg_380 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_8_reg_385 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_9_reg_390 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_10_reg_395 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_11_reg_400 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_12_reg_405 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_13_reg_410 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_14_reg_415 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_15_reg_420 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_reg_425 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal layer4_out_1_reg_430 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_2_reg_435 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_3_reg_440 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_4_reg_445 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_5_reg_450 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_6_reg_455 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_7_reg_460 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_8_reg_465 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_9_reg_470 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_10_reg_475 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_11_reg_480 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_12_reg_485 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_13_reg_490 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_14_reg_495 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_15_reg_500 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_return : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_block_state29_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal regslice_both_layer5_out_U_apdone_blk : STD_LOGIC;
    signal ap_block_state30_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_done : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_idle : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ready : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ce : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp33 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp34 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp35 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp36 : BOOLEAN;
    signal ap_block_state29_pp0_stage4_iter3_ignore_call10 : BOOLEAN;
    signal ap_block_pp0_stage4_11001_ignoreCallOp37 : BOOLEAN;
    signal ap_block_state30_pp0_stage5_iter3_ignore_call10 : BOOLEAN;
    signal ap_block_pp0_stage5_11001_ignoreCallOp38 : BOOLEAN;
    signal ap_block_pp0_stage6_11001_ignoreCallOp39 : BOOLEAN;
    signal ap_block_pp0_stage7_11001_ignoreCallOp40 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_ready : STD_LOGIC;
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_done : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_idle : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ready : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ce : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage1_11001_ignoreCallOp75 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp76 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp77 : BOOLEAN;
    signal ap_block_state29_pp0_stage4_iter3_ignore_call44 : BOOLEAN;
    signal ap_block_pp0_stage4_11001_ignoreCallOp78 : BOOLEAN;
    signal ap_block_state30_pp0_stage5_iter3_ignore_call44 : BOOLEAN;
    signal ap_block_pp0_stage5_11001_ignoreCallOp79 : BOOLEAN;
    signal ap_block_pp0_stage6_11001_ignoreCallOp80 : BOOLEAN;
    signal ap_block_pp0_stage7_11001_ignoreCallOp81 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call44 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp82 : BOOLEAN;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_done : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_idle : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ready : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ce : STD_LOGIC;
    signal ap_block_pp0_stage3_11001_ignoreCallOp101 : BOOLEAN;
    signal ap_block_state29_pp0_stage4_iter3_ignore_call61 : BOOLEAN;
    signal ap_block_pp0_stage4_11001_ignoreCallOp102 : BOOLEAN;
    signal ap_block_state30_pp0_stage5_iter3_ignore_call61 : BOOLEAN;
    signal ap_block_pp0_stage5_11001_ignoreCallOp103 : BOOLEAN;
    signal ap_block_pp0_stage6_11001_ignoreCallOp104 : BOOLEAN;
    signal ap_block_pp0_stage7_11001_ignoreCallOp105 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call61 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp106 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp107 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp108 : BOOLEAN;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg : STD_LOGIC := '0';
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_onepulse_ap_start : STD_LOGIC;
    signal ap_block_pp0_stage0_ignoreCallOp33 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp58 : BOOLEAN;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_ignoreCallOp75 : BOOLEAN;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage3_ignoreCallOp101 : BOOLEAN;
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to3 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal layer5_out_ap_vld_int_regslice : STD_LOGIC;
    signal layer5_out_ap_ack_int_regslice : STD_LOGIC;
    signal regslice_both_layer5_out_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component decoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component decoder_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_rst : IN STD_LOGIC );
    end component;


    component decoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component decoder_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (255 downto 0) );
    end component;


    component decoder_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59 : component decoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start,
        ap_done => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_done,
        ap_idle => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_idle,
        ap_ready => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ready,
        ap_ce => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ce,
        data_0_val => input_114_0,
        data_1_val => input_114_1,
        ap_return_0 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_0,
        ap_return_1 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_1,
        ap_return_2 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_2,
        ap_return_3 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_3,
        ap_return_4 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_4,
        ap_return_5 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_5,
        ap_return_6 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_6,
        ap_return_7 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_7,
        ap_return_8 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_8,
        ap_return_9 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_9,
        ap_return_10 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_10,
        ap_return_11 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_11,
        ap_return_12 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_12,
        ap_return_13 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_13,
        ap_return_14 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_14,
        ap_return_15 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_15);

    call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67 : component decoder_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s
    port map (
        ap_ready => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_ready,
        data_0_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_0,
        data_1_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_1,
        data_2_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_2,
        data_3_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_3,
        data_4_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_4,
        data_5_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_5,
        data_6_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_6,
        data_7_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_7,
        data_8_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_8,
        data_9_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_9,
        data_10_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_10,
        data_11_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_11,
        data_12_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_12,
        data_13_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_13,
        data_14_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_14,
        data_15_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_15,
        ap_return_0 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_0,
        ap_return_1 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_1,
        ap_return_2 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_2,
        ap_return_3 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_3,
        ap_return_4 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_4,
        ap_return_5 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_5,
        ap_return_6 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_6,
        ap_return_7 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_7,
        ap_return_8 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_8,
        ap_return_9 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_9,
        ap_return_10 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_10,
        ap_return_11 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_11,
        ap_return_12 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_12,
        ap_return_13 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_13,
        ap_return_14 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_14,
        ap_return_15 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_15,
        ap_rst => ap_rst);

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87 : component decoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start,
        ap_done => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_done,
        ap_idle => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_idle,
        ap_ready => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ready,
        ap_ce => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ce,
        data_0_val => layer3_out_reg_345,
        data_1_val => layer3_out_1_reg_350,
        data_2_val => layer3_out_2_reg_355,
        data_3_val => layer3_out_3_reg_360,
        data_4_val => layer3_out_4_reg_365,
        data_5_val => layer3_out_5_reg_370,
        data_6_val => layer3_out_6_reg_375,
        data_7_val => layer3_out_7_reg_380,
        data_8_val => layer3_out_8_reg_385,
        data_9_val => layer3_out_9_reg_390,
        data_10_val => layer3_out_10_reg_395,
        data_11_val => layer3_out_11_reg_400,
        data_12_val => layer3_out_12_reg_405,
        data_13_val => layer3_out_13_reg_410,
        data_14_val => layer3_out_14_reg_415,
        data_15_val => layer3_out_15_reg_420,
        ap_return_0 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_0,
        ap_return_1 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_1,
        ap_return_2 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_2,
        ap_return_3 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_3,
        ap_return_4 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_4,
        ap_return_5 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_5,
        ap_return_6 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_6,
        ap_return_7 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_7,
        ap_return_8 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_8,
        ap_return_9 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_9,
        ap_return_10 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_10,
        ap_return_11 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_11,
        ap_return_12 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_12,
        ap_return_13 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_13,
        ap_return_14 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_14,
        ap_return_15 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_15);

    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107 : component decoder_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start,
        ap_done => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_done,
        ap_idle => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_idle,
        ap_ready => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ready,
        ap_ce => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ce,
        data_0_val => layer4_out_reg_425,
        data_1_val => layer4_out_1_reg_430,
        data_2_val => layer4_out_2_reg_435,
        data_3_val => layer4_out_3_reg_440,
        data_4_val => layer4_out_4_reg_445,
        data_5_val => layer4_out_5_reg_450,
        data_6_val => layer4_out_6_reg_455,
        data_7_val => layer4_out_7_reg_460,
        data_8_val => layer4_out_8_reg_465,
        data_9_val => layer4_out_9_reg_470,
        data_10_val => layer4_out_10_reg_475,
        data_11_val => layer4_out_11_reg_480,
        data_12_val => layer4_out_12_reg_485,
        data_13_val => layer4_out_13_reg_490,
        data_14_val => layer4_out_14_reg_495,
        data_15_val => layer4_out_15_reg_500,
        ap_return => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_return);

    regslice_both_layer5_out_U : component decoder_regslice_both
    generic map (
        DataWidth => 256)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_return,
        vld_in => layer5_out_ap_vld_int_regslice,
        ack_in => layer5_out_ap_ack_int_regslice,
        data_out => layer5_out,
        vld_out => regslice_both_layer5_out_U_vld_out,
        ack_out => layer5_out_ap_ack,
        apdone_blk => regslice_both_layer5_out_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp33) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ready = ap_const_logic_1)) then 
                    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ready = ap_const_logic_1)) then 
                    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ready = ap_const_logic_1)) then 
                    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                layer3_out_10_reg_395 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_10;
                layer3_out_11_reg_400 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_11;
                layer3_out_12_reg_405 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_12;
                layer3_out_13_reg_410 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_13;
                layer3_out_14_reg_415 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_14;
                layer3_out_15_reg_420 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_15;
                layer3_out_1_reg_350 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_1;
                layer3_out_2_reg_355 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_2;
                layer3_out_3_reg_360 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_3;
                layer3_out_4_reg_365 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_4;
                layer3_out_5_reg_370 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_5;
                layer3_out_6_reg_375 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_6;
                layer3_out_7_reg_380 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_7;
                layer3_out_8_reg_385 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_8;
                layer3_out_9_reg_390 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_9;
                layer3_out_reg_345 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                layer4_out_10_reg_475 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_10;
                layer4_out_11_reg_480 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_11;
                layer4_out_12_reg_485 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_12;
                layer4_out_13_reg_490 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_13;
                layer4_out_14_reg_495 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_14;
                layer4_out_15_reg_500 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_15;
                layer4_out_1_reg_430 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_1;
                layer4_out_2_reg_435 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_2;
                layer4_out_3_reg_440 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_3;
                layer4_out_4_reg_445 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_4;
                layer4_out_5_reg_450 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_5;
                layer4_out_6_reg_455 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_6;
                layer4_out_7_reg_460 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_7;
                layer4_out_8_reg_465 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_8;
                layer4_out_9_reg_470 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_9;
                layer4_out_reg_425 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to3, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_reset_idle_pp0, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to3 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp106_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0_ignore_call61)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp106 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call61));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp33_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0_ignore_call10)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp33 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call10));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp82_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0_ignore_call44)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp82 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call44));
    end process;

        ap_block_pp0_stage0_ignoreCallOp33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp58 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;

        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp75 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_ignoreCallOp75 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp76 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_ignoreCallOp101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_01001_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_state29_pp0_stage4_iter3)
    begin
                ap_block_pp0_stage4_01001 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state29_pp0_stage4_iter3));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_state29_pp0_stage4_iter3, layer5_out_ap_ack_int_regslice)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state29_pp0_stage4_iter3) or (layer5_out_ap_ack_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage4_11001_ignoreCallOp102_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_state29_pp0_stage4_iter3_ignore_call61, layer5_out_ap_ack_int_regslice)
    begin
                ap_block_pp0_stage4_11001_ignoreCallOp102 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state29_pp0_stage4_iter3_ignore_call61) or (layer5_out_ap_ack_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage4_11001_ignoreCallOp37_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_state29_pp0_stage4_iter3_ignore_call10, layer5_out_ap_ack_int_regslice)
    begin
                ap_block_pp0_stage4_11001_ignoreCallOp37 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state29_pp0_stage4_iter3_ignore_call10) or (layer5_out_ap_ack_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage4_11001_ignoreCallOp78_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_state29_pp0_stage4_iter3_ignore_call44, layer5_out_ap_ack_int_regslice)
    begin
                ap_block_pp0_stage4_11001_ignoreCallOp78 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state29_pp0_stage4_iter3_ignore_call44) or (layer5_out_ap_ack_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_state29_pp0_stage4_iter3, layer5_out_ap_ack_int_regslice)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state29_pp0_stage4_iter3) or (layer5_out_ap_ack_int_regslice = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_state30_pp0_stage5_iter3, layer5_out_ap_ack_int_regslice)
    begin
                ap_block_pp0_stage5_11001 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state30_pp0_stage5_iter3) or (layer5_out_ap_ack_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage5_11001_ignoreCallOp103_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_state30_pp0_stage5_iter3_ignore_call61, layer5_out_ap_ack_int_regslice)
    begin
                ap_block_pp0_stage5_11001_ignoreCallOp103 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state30_pp0_stage5_iter3_ignore_call61) or (layer5_out_ap_ack_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage5_11001_ignoreCallOp38_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_state30_pp0_stage5_iter3_ignore_call10, layer5_out_ap_ack_int_regslice)
    begin
                ap_block_pp0_stage5_11001_ignoreCallOp38 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state30_pp0_stage5_iter3_ignore_call10) or (layer5_out_ap_ack_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage5_11001_ignoreCallOp79_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_state30_pp0_stage5_iter3_ignore_call44, layer5_out_ap_ack_int_regslice)
    begin
                ap_block_pp0_stage5_11001_ignoreCallOp79 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state30_pp0_stage5_iter3_ignore_call44) or (layer5_out_ap_ack_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_state30_pp0_stage5_iter3, layer5_out_ap_ack_int_regslice)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state30_pp0_stage5_iter3) or (layer5_out_ap_ack_int_regslice = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001_ignoreCallOp104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001_ignoreCallOp39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001_ignoreCallOp80 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001_ignoreCallOp105 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001_ignoreCallOp40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001_ignoreCallOp81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(input_114_0_ap_vld, input_114_1_ap_vld)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((input_114_1_ap_vld = ap_const_logic_0) or (input_114_0_ap_vld = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call10_assign_proc : process(input_114_0_ap_vld, input_114_1_ap_vld)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call10 <= ((input_114_1_ap_vld = ap_const_logic_0) or (input_114_0_ap_vld = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call44_assign_proc : process(input_114_0_ap_vld, input_114_1_ap_vld)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call44 <= ((input_114_1_ap_vld = ap_const_logic_0) or (input_114_0_ap_vld = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call61_assign_proc : process(input_114_0_ap_vld, input_114_1_ap_vld)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call61 <= ((input_114_1_ap_vld = ap_const_logic_0) or (input_114_0_ap_vld = ap_const_logic_0));
    end process;


    ap_block_state29_pp0_stage4_iter3_assign_proc : process(layer5_out_ap_ack_int_regslice)
    begin
                ap_block_state29_pp0_stage4_iter3 <= (layer5_out_ap_ack_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state29_pp0_stage4_iter3_ignore_call10_assign_proc : process(layer5_out_ap_ack_int_regslice)
    begin
                ap_block_state29_pp0_stage4_iter3_ignore_call10 <= (layer5_out_ap_ack_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state29_pp0_stage4_iter3_ignore_call44_assign_proc : process(layer5_out_ap_ack_int_regslice)
    begin
                ap_block_state29_pp0_stage4_iter3_ignore_call44 <= (layer5_out_ap_ack_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state29_pp0_stage4_iter3_ignore_call61_assign_proc : process(layer5_out_ap_ack_int_regslice)
    begin
                ap_block_state29_pp0_stage4_iter3_ignore_call61 <= (layer5_out_ap_ack_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state30_pp0_stage5_iter3_assign_proc : process(regslice_both_layer5_out_U_apdone_blk, layer5_out_ap_ack_int_regslice)
    begin
                ap_block_state30_pp0_stage5_iter3 <= ((regslice_both_layer5_out_U_apdone_blk = ap_const_logic_1) or (layer5_out_ap_ack_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state30_pp0_stage5_iter3_ignore_call10_assign_proc : process(regslice_both_layer5_out_U_apdone_blk, layer5_out_ap_ack_int_regslice)
    begin
                ap_block_state30_pp0_stage5_iter3_ignore_call10 <= ((regslice_both_layer5_out_U_apdone_blk = ap_const_logic_1) or (layer5_out_ap_ack_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state30_pp0_stage5_iter3_ignore_call44_assign_proc : process(regslice_both_layer5_out_U_apdone_blk, layer5_out_ap_ack_int_regslice)
    begin
                ap_block_state30_pp0_stage5_iter3_ignore_call44 <= ((regslice_both_layer5_out_U_apdone_blk = ap_const_logic_1) or (layer5_out_ap_ack_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state30_pp0_stage5_iter3_ignore_call61_assign_proc : process(regslice_both_layer5_out_U_apdone_blk, layer5_out_ap_ack_int_regslice)
    begin
                ap_block_state30_pp0_stage5_iter3_ignore_call61 <= ((regslice_both_layer5_out_U_apdone_blk = ap_const_logic_1) or (layer5_out_ap_ack_int_regslice = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001_ignoreCallOp33, ap_block_pp0_stage1_11001_ignoreCallOp34, ap_block_pp0_stage2_11001_ignoreCallOp35, ap_block_pp0_stage3_11001_ignoreCallOp36, ap_block_pp0_stage4_11001_ignoreCallOp37, ap_block_pp0_stage5_11001_ignoreCallOp38, ap_block_pp0_stage6_11001_ignoreCallOp39, ap_block_pp0_stage7_11001_ignoreCallOp40, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001_ignoreCallOp40) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001_ignoreCallOp39) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001_ignoreCallOp38) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001_ignoreCallOp37) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp36) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp35) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp34) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp33) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start <= (grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_onepulse_ap_start or grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg);

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_onepulse_ap_start_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_onepulse_ap_start <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_onepulse_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001_ignoreCallOp75, ap_block_pp0_stage2_11001_ignoreCallOp76, ap_block_pp0_stage3_11001_ignoreCallOp77, ap_block_pp0_stage4_11001_ignoreCallOp78, ap_block_pp0_stage5_11001_ignoreCallOp79, ap_block_pp0_stage6_11001_ignoreCallOp80, ap_block_pp0_stage7_11001_ignoreCallOp81, ap_block_pp0_stage0_11001_ignoreCallOp82)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp82) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001_ignoreCallOp81) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001_ignoreCallOp80) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001_ignoreCallOp79) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001_ignoreCallOp78) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp77) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp76) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp75) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg;

    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage3_11001_ignoreCallOp101, ap_block_pp0_stage4_11001_ignoreCallOp102, ap_block_pp0_stage5_11001_ignoreCallOp103, ap_block_pp0_stage6_11001_ignoreCallOp104, ap_block_pp0_stage7_11001_ignoreCallOp105, ap_block_pp0_stage0_11001_ignoreCallOp106, ap_block_pp0_stage1_11001_ignoreCallOp107, ap_block_pp0_stage2_11001_ignoreCallOp108)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp108) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp107) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp106) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001_ignoreCallOp105) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001_ignoreCallOp104) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001_ignoreCallOp103) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001_ignoreCallOp102) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp101) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ce <= ap_const_logic_1;
        else 
            grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg;

    input_114_0_ap_ack_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_114_0_ap_ack <= ap_const_logic_1;
        else 
            input_114_0_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    input_114_0_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, input_114_0_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_114_0_blk_n <= input_114_0_ap_vld;
        else 
            input_114_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_114_1_ap_ack_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_114_1_ap_ack <= ap_const_logic_1;
        else 
            input_114_1_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    input_114_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, input_114_1_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_114_1_blk_n <= input_114_1_ap_vld;
        else 
            input_114_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    layer5_out_ap_vld <= regslice_both_layer5_out_U_vld_out;

    layer5_out_ap_vld_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            layer5_out_ap_vld_int_regslice <= ap_const_logic_1;
        else 
            layer5_out_ap_vld_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    layer5_out_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, layer5_out_ap_ack_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            layer5_out_blk_n <= layer5_out_ap_ack_int_regslice;
        else 
            layer5_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

end behav;
