-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity decoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of decoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv21_D : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001101";
    constant ap_const_lv26_329 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001100101001";
    constant ap_const_lv26_3FFFECC : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111011001100";
    constant ap_const_lv26_3FFFC83 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110010000011";
    constant ap_const_lv26_3FFFEA8 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111010101000";
    constant ap_const_lv26_3FFFCEE : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110011101110";
    constant ap_const_lv26_573 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010101110011";
    constant ap_const_lv26_3FFFC15 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110000010101";
    constant ap_const_lv26_368 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001101101000";
    constant ap_const_lv26_3FFFCB8 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110010111000";
    constant ap_const_lv26_3FFFDBF : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110110111111";
    constant ap_const_lv26_1DA : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000111011010";
    constant ap_const_lv26_3FFFB57 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101101010111";
    constant ap_const_lv26_1AF : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000110101111";
    constant ap_const_lv26_3FFFC49 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110001001001";
    constant ap_const_lv26_3FFFBFD : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101111111101";
    constant ap_const_lv26_3FFFCC6 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110011000110";
    constant ap_const_lv26_3FFFEF4 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111011110100";
    constant ap_const_lv25_1FFFF4E : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111101001110";
    constant ap_const_lv26_3FFFBF2 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101111110010";
    constant ap_const_lv26_3FFFE6E : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111001101110";
    constant ap_const_lv26_4A4 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010010100100";
    constant ap_const_lv26_3CB : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001111001011";
    constant ap_const_lv26_41E : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010000011110";
    constant ap_const_lv26_3FFFBDC : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101111011100";
    constant ap_const_lv26_3FFFECA : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111011001010";
    constant ap_const_lv26_396 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001110010110";
    constant ap_const_lv26_487 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010010000111";
    constant ap_const_lv26_3FFFBA0 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101110100000";
    constant ap_const_lv26_196 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000110010110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv9_1D6 : STD_LOGIC_VECTOR (8 downto 0) := "111010110";
    constant ap_const_lv16_1D0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000111010000";
    constant ap_const_lv16_1F3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000111110011";
    constant ap_const_lv16_FFDE : STD_LOGIC_VECTOR (15 downto 0) := "1111111111011110";
    constant ap_const_lv16_1AC : STD_LOGIC_VECTOR (15 downto 0) := "0000000110101100";
    constant ap_const_lv16_125 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100100101";
    constant ap_const_lv16_250 : STD_LOGIC_VECTOR (15 downto 0) := "0000001001010000";
    constant ap_const_lv16_1F9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000111111001";
    constant ap_const_lv16_1BA : STD_LOGIC_VECTOR (15 downto 0) := "0000000110111010";
    constant ap_const_lv16_1CB : STD_LOGIC_VECTOR (15 downto 0) := "0000000111001011";
    constant ap_const_lv16_15E : STD_LOGIC_VECTOR (15 downto 0) := "0000000101011110";
    constant ap_const_lv16_18D : STD_LOGIC_VECTOR (15 downto 0) := "0000000110001101";
    constant ap_const_lv16_20C : STD_LOGIC_VECTOR (15 downto 0) := "0000001000001100";
    constant ap_const_lv16_223 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000100011";
    constant ap_const_lv16_FFCC : STD_LOGIC_VECTOR (15 downto 0) := "1111111111001100";
    constant ap_const_lv16_1DB : STD_LOGIC_VECTOR (15 downto 0) := "0000000111011011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal reg_499 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal reg_503 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal reg_507 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_511 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal reg_515 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln70_fu_519_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln70_reg_902 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln42_s_reg_910 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln42_12_reg_915 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln42_4_reg_920 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_5_reg_925 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_7_reg_930 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_8_reg_935 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal trunc_ln42_9_reg_940 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_2_reg_945 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_10_reg_950 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_1_val_read_reg_955 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal trunc_ln42_11_reg_960 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_13_reg_965 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_14_reg_970 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_15_reg_975 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln58_260_fu_629_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_260_reg_980 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln70_46_fu_635_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln70_46_reg_985 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln42_18_reg_993 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_20_reg_998 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_256_fu_651_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_256_reg_1003 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_258_fu_663_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_258_reg_1008 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_262_fu_674_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_262_reg_1013 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_264_fu_686_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_264_reg_1018 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_266_fu_696_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_266_reg_1023 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_268_fu_707_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_268_reg_1028 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_270_fu_719_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_270_reg_1033 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_272_fu_730_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_272_reg_1038 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_274_fu_741_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_274_reg_1043 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_276_fu_755_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_276_reg_1048 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_278_fu_766_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_278_reg_1053 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_280_fu_777_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_280_reg_1058 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_282_fu_788_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_282_reg_1063 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_port_reg_data_1_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_154_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln70_45_fu_526_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_154_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal grp_fu_155_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_155_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_156_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln70_47_fu_590_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_156_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_157_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_157_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_155_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_157_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_156_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_154_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln70_fu_519_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln70_45_fu_526_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_s_fu_531_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_fu_541_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_541_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln73_28_fu_549_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_94_fu_559_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_94_fu_559_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln73_fu_553_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln73_29_fu_567_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln73_16_fu_571_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln70_47_fu_590_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_15_fu_595_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln42_17_fu_605_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_17_fu_605_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln73_fu_615_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln58_259_fu_619_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln58_fu_625_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln42_fu_587_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln42_39_fu_642_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_fu_645_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_257_fu_657_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_261_fu_669_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_263_fu_680_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_265_fu_691_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_267_fu_701_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_269_fu_713_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_271_fu_724_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_273_fu_735_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_275_fu_749_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_277_fu_760_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_279_fu_771_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_281_fu_782_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln42_38_fu_746_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_283_fu_797_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_285_fu_808_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln58_2_fu_794_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_284_fu_803_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_286_fu_814_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component decoder_mul_16s_13s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component decoder_mul_16s_12s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;



begin
    mul_16s_13s_26_1_1_U1 : component decoder_mul_16s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_154_p0,
        din1 => grp_fu_154_p1,
        dout => grp_fu_154_p2);

    mul_16s_12s_26_1_1_U2 : component decoder_mul_16s_12s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 12,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_155_p0,
        din1 => grp_fu_155_p1,
        dout => grp_fu_155_p2);

    mul_16s_13s_26_1_1_U3 : component decoder_mul_16s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_156_p0,
        din1 => grp_fu_156_p1,
        dout => grp_fu_156_p2);

    mul_16s_13s_26_1_1_U4 : component decoder_mul_16s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_157_p0,
        din1 => grp_fu_157_p1,
        dout => grp_fu_157_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_ce))) then
                add_ln58_256_reg_1003 <= add_ln58_256_fu_651_p2;
                sext_ln70_46_reg_985 <= sext_ln70_46_fu_635_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_ce))) then
                add_ln58_258_reg_1008 <= add_ln58_258_fu_663_p2;
                add_ln58_262_reg_1013 <= add_ln58_262_fu_674_p2;
                add_ln58_264_reg_1018 <= add_ln58_264_fu_686_p2;
                add_ln58_266_reg_1023 <= add_ln58_266_fu_696_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                add_ln58_260_reg_980 <= add_ln58_260_fu_629_p2;
                data_1_val_read_reg_955 <= ap_port_reg_data_1_val;
                trunc_ln42_15_reg_975 <= trunc_ln42_15_fu_595_p1(24 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                add_ln58_268_reg_1028 <= add_ln58_268_fu_707_p2;
                add_ln58_270_reg_1033 <= add_ln58_270_fu_719_p2;
                add_ln58_272_reg_1038 <= add_ln58_272_fu_730_p2;
                add_ln58_274_reg_1043 <= add_ln58_274_fu_741_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                add_ln58_276_reg_1048 <= add_ln58_276_fu_755_p2;
                add_ln58_278_reg_1053 <= add_ln58_278_fu_766_p2;
                add_ln58_280_reg_1058 <= add_ln58_280_fu_777_p2;
                add_ln58_282_reg_1063 <= add_ln58_282_fu_788_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_port_reg_data_1_val <= data_1_val;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_499 <= grp_fu_155_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_503 <= grp_fu_157_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_507 <= grp_fu_156_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_511 <= grp_fu_154_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_ce)))) then
                reg_515 <= grp_fu_154_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sext_ln70_reg_902 <= sext_ln70_fu_519_p1;
                trunc_ln42_12_reg_915 <= sub_ln73_16_fu_571_p2(24 downto 10);
                trunc_ln42_s_reg_910 <= trunc_ln42_s_fu_531_p1(20 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                trunc_ln42_10_reg_950 <= grp_fu_156_p2(25 downto 10);
                trunc_ln42_2_reg_945 <= grp_fu_154_p2(25 downto 10);
                trunc_ln42_8_reg_935 <= grp_fu_155_p2(25 downto 10);
                trunc_ln42_9_reg_940 <= grp_fu_157_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                trunc_ln42_11_reg_960 <= grp_fu_155_p2(25 downto 10);
                trunc_ln42_13_reg_965 <= grp_fu_157_p2(25 downto 10);
                trunc_ln42_14_reg_970 <= grp_fu_154_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_ce))) then
                trunc_ln42_18_reg_993 <= grp_fu_157_p2(25 downto 10);
                trunc_ln42_20_reg_998 <= grp_fu_156_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                trunc_ln42_4_reg_920 <= grp_fu_155_p2(25 downto 10);
                trunc_ln42_5_reg_925 <= grp_fu_157_p2(25 downto 10);
                trunc_ln42_7_reg_930 <= grp_fu_156_p2(25 downto 10);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln58_256_fu_651_p2 <= std_logic_vector(unsigned(add_ln58_fu_645_p2) + unsigned(reg_499));
    add_ln58_257_fu_657_p2 <= std_logic_vector(unsigned(reg_499) + unsigned(ap_const_lv16_1F3));
    add_ln58_258_fu_663_p2 <= std_logic_vector(unsigned(add_ln58_257_fu_657_p2) + unsigned(reg_503));
    add_ln58_259_fu_619_p2 <= std_logic_vector(signed(sext_ln73_fu_615_p1) + signed(ap_const_lv9_1D6));
    add_ln58_260_fu_629_p2 <= std_logic_vector(signed(sext_ln58_fu_625_p1) + signed(sext_ln42_fu_587_p1));
    add_ln58_261_fu_669_p2 <= std_logic_vector(unsigned(trunc_ln42_18_reg_993) + unsigned(ap_const_lv16_FFDE));
    add_ln58_262_fu_674_p2 <= std_logic_vector(unsigned(add_ln58_261_fu_669_p2) + unsigned(reg_507));
    add_ln58_263_fu_680_p2 <= std_logic_vector(unsigned(reg_515) + unsigned(ap_const_lv16_1AC));
    add_ln58_264_fu_686_p2 <= std_logic_vector(unsigned(add_ln58_263_fu_680_p2) + unsigned(trunc_ln42_4_reg_920));
    add_ln58_265_fu_691_p2 <= std_logic_vector(unsigned(trunc_ln42_20_reg_998) + unsigned(ap_const_lv16_125));
    add_ln58_266_fu_696_p2 <= std_logic_vector(unsigned(add_ln58_265_fu_691_p2) + unsigned(trunc_ln42_5_reg_925));
    add_ln58_267_fu_701_p2 <= std_logic_vector(unsigned(reg_499) + unsigned(ap_const_lv16_250));
    add_ln58_268_fu_707_p2 <= std_logic_vector(unsigned(add_ln58_267_fu_701_p2) + unsigned(reg_511));
    add_ln58_269_fu_713_p2 <= std_logic_vector(unsigned(reg_503) + unsigned(ap_const_lv16_1F9));
    add_ln58_270_fu_719_p2 <= std_logic_vector(unsigned(add_ln58_269_fu_713_p2) + unsigned(trunc_ln42_7_reg_930));
    add_ln58_271_fu_724_p2 <= std_logic_vector(unsigned(reg_515) + unsigned(ap_const_lv16_1BA));
    add_ln58_272_fu_730_p2 <= std_logic_vector(unsigned(add_ln58_271_fu_724_p2) + unsigned(trunc_ln42_8_reg_935));
    add_ln58_273_fu_735_p2 <= std_logic_vector(unsigned(reg_507) + unsigned(ap_const_lv16_1CB));
    add_ln58_274_fu_741_p2 <= std_logic_vector(unsigned(add_ln58_273_fu_735_p2) + unsigned(trunc_ln42_9_reg_940));
    add_ln58_275_fu_749_p2 <= std_logic_vector(unsigned(reg_499) + unsigned(ap_const_lv16_15E));
    add_ln58_276_fu_755_p2 <= std_logic_vector(unsigned(add_ln58_275_fu_749_p2) + unsigned(trunc_ln42_2_reg_945));
    add_ln58_277_fu_760_p2 <= std_logic_vector(unsigned(reg_503) + unsigned(ap_const_lv16_18D));
    add_ln58_278_fu_766_p2 <= std_logic_vector(unsigned(add_ln58_277_fu_760_p2) + unsigned(trunc_ln42_10_reg_950));
    add_ln58_279_fu_771_p2 <= std_logic_vector(unsigned(reg_511) + unsigned(ap_const_lv16_20C));
    add_ln58_280_fu_777_p2 <= std_logic_vector(unsigned(add_ln58_279_fu_771_p2) + unsigned(trunc_ln42_11_reg_960));
    add_ln58_281_fu_782_p2 <= std_logic_vector(unsigned(reg_507) + unsigned(ap_const_lv16_223));
    add_ln58_282_fu_788_p2 <= std_logic_vector(unsigned(add_ln58_281_fu_782_p2) + unsigned(sext_ln42_38_fu_746_p1));
    add_ln58_283_fu_797_p2 <= std_logic_vector(unsigned(reg_511) + unsigned(ap_const_lv16_FFCC));
    add_ln58_284_fu_803_p2 <= std_logic_vector(unsigned(add_ln58_283_fu_797_p2) + unsigned(trunc_ln42_13_reg_965));
    add_ln58_285_fu_808_p2 <= std_logic_vector(unsigned(reg_503) + unsigned(ap_const_lv16_1DB));
    add_ln58_286_fu_814_p2 <= std_logic_vector(unsigned(add_ln58_285_fu_808_p2) + unsigned(trunc_ln42_14_reg_970));
    add_ln58_fu_645_p2 <= std_logic_vector(signed(sext_ln42_39_fu_642_p1) + signed(ap_const_lv16_1D0));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage1_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage2_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage3_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage4_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage5_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage6_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage7_subdone <= (ap_const_logic_0 = ap_ce);
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= add_ln58_256_reg_1003;
    ap_return_1 <= add_ln58_258_reg_1008;
    ap_return_10 <= add_ln58_276_reg_1048;
    ap_return_11 <= add_ln58_278_reg_1053;
    ap_return_12 <= add_ln58_280_reg_1058;
    ap_return_13 <= add_ln58_282_reg_1063;
    ap_return_14 <= add_ln58_284_fu_803_p2;
    ap_return_15 <= add_ln58_286_fu_814_p2;
    ap_return_2 <= sext_ln58_2_fu_794_p1;
    ap_return_3 <= add_ln58_262_reg_1013;
    ap_return_4 <= add_ln58_264_reg_1018;
    ap_return_5 <= add_ln58_266_reg_1023;
    ap_return_6 <= add_ln58_268_reg_1028;
    ap_return_7 <= add_ln58_270_reg_1033;
    ap_return_8 <= add_ln58_272_reg_1038;
    ap_return_9 <= add_ln58_274_reg_1043;

    grp_fu_154_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, sext_ln70_reg_902, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln70_46_fu_635_p1, sext_ln70_46_reg_985, sext_ln70_45_fu_526_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_154_p0 <= sext_ln70_46_reg_985(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_154_p0 <= sext_ln70_46_fu_635_p1(16 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_154_p0 <= sext_ln70_reg_902(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_154_p0 <= sext_ln70_45_fu_526_p1(16 - 1 downto 0);
        else 
            grp_fu_154_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_154_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_154_p1 <= ap_const_lv26_3FFFC15(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_154_p1 <= ap_const_lv26_573(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_154_p1 <= ap_const_lv26_3FFFCEE(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_154_p1 <= ap_const_lv26_3FFFEA8(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_154_p1 <= ap_const_lv26_3FFFC83(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_154_p1 <= ap_const_lv26_3FFFECC(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_154_p1 <= ap_const_lv26_329(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_154_p1 <= ap_const_lv21_D(13 - 1 downto 0);
            else 
                grp_fu_154_p1 <= "XXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_154_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_155_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, sext_ln70_fu_519_p1, sext_ln70_reg_902, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln70_46_fu_635_p1, sext_ln70_46_reg_985, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_155_p0 <= sext_ln70_46_reg_985(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_155_p0 <= sext_ln70_46_fu_635_p1(16 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_155_p0 <= sext_ln70_reg_902(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_155_p0 <= sext_ln70_fu_519_p1(16 - 1 downto 0);
        else 
            grp_fu_155_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_155_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_155_p1 <= ap_const_lv26_3FFFC49(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_155_p1 <= ap_const_lv26_1AF(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_155_p1 <= ap_const_lv26_3FFFB57(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_155_p1 <= ap_const_lv26_1DA(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_155_p1 <= ap_const_lv26_3FFFDBF(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_155_p1 <= ap_const_lv26_3FFFCB8(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_155_p1 <= ap_const_lv26_368(12 - 1 downto 0);
            else 
                grp_fu_155_p1 <= "XXXXXXXXXXXX";
            end if;
        else 
            grp_fu_155_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_156_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, sext_ln70_fu_519_p1, sext_ln70_reg_902, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln70_46_fu_635_p1, sext_ln70_46_reg_985, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, sext_ln70_47_fu_590_p1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_156_p0 <= sext_ln70_46_reg_985(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_156_p0 <= sext_ln70_46_fu_635_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_156_p0 <= sext_ln70_47_fu_590_p1(16 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_156_p0 <= sext_ln70_reg_902(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_156_p0 <= sext_ln70_fu_519_p1(16 - 1 downto 0);
        else 
            grp_fu_156_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_156_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_156_p1 <= ap_const_lv26_4A4(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_156_p1 <= ap_const_lv26_3FFFE6E(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_156_p1 <= ap_const_lv26_3FFFBF2(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_156_p1 <= ap_const_lv25_1FFFF4E(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_156_p1 <= ap_const_lv26_3FFFEF4(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_156_p1 <= ap_const_lv26_3FFFCC6(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_156_p1 <= ap_const_lv26_3FFFBFD(13 - 1 downto 0);
            else 
                grp_fu_156_p1 <= "XXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_156_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_157_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, sext_ln70_fu_519_p1, sext_ln70_reg_902, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln70_46_fu_635_p1, sext_ln70_46_reg_985, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_157_p0 <= sext_ln70_46_reg_985(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_157_p0 <= sext_ln70_46_fu_635_p1(16 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_157_p0 <= sext_ln70_reg_902(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_157_p0 <= sext_ln70_fu_519_p1(16 - 1 downto 0);
        else 
            grp_fu_157_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_157_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_157_p1 <= ap_const_lv26_196(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_157_p1 <= ap_const_lv26_3FFFBA0(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_157_p1 <= ap_const_lv26_487(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_157_p1 <= ap_const_lv26_396(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_157_p1 <= ap_const_lv26_3FFFECA(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_157_p1 <= ap_const_lv26_3FFFBDC(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_157_p1 <= ap_const_lv26_41E(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_157_p1 <= ap_const_lv26_3CB(13 - 1 downto 0);
            else 
                grp_fu_157_p1 <= "XXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_157_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

        sext_ln42_38_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln42_12_reg_915),16));

        sext_ln42_39_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln42_15_reg_975),16));

        sext_ln42_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln42_s_reg_910),12));

        sext_ln58_2_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_260_reg_980),16));

        sext_ln58_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_259_fu_619_p2),12));

    sext_ln70_45_fu_526_p0 <= data_0_val;
        sext_ln70_45_fu_526_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln70_45_fu_526_p0),21));

        sext_ln70_46_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_1_val_read_reg_955),26));

    sext_ln70_47_fu_590_p0 <= ap_port_reg_data_1_val;
        sext_ln70_47_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln70_47_fu_590_p0),25));

    sext_ln70_fu_519_p0 <= data_0_val;
        sext_ln70_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln70_fu_519_p0),26));

        sext_ln73_28_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_541_p3),25));

        sext_ln73_29_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_94_fu_559_p3),25));

        sext_ln73_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln42_17_fu_605_p4),9));

    sub_ln73_16_fu_571_p2 <= std_logic_vector(unsigned(sub_ln73_fu_553_p2) - unsigned(sext_ln73_29_fu_567_p1));
    sub_ln73_fu_553_p2 <= std_logic_vector(unsigned(ap_const_lv25_0) - unsigned(sext_ln73_28_fu_549_p1));
    tmp_94_fu_559_p1 <= data_0_val;
    tmp_94_fu_559_p3 <= (tmp_94_fu_559_p1 & ap_const_lv4_0);
    tmp_fu_541_p1 <= data_0_val;
    tmp_fu_541_p3 <= (tmp_fu_541_p1 & ap_const_lv7_0);
    trunc_ln42_15_fu_595_p1 <= grp_fu_156_p2(25 - 1 downto 0);
    trunc_ln42_17_fu_605_p1 <= ap_port_reg_data_1_val;
    trunc_ln42_17_fu_605_p4 <= trunc_ln42_17_fu_605_p1(15 downto 8);
    trunc_ln42_s_fu_531_p1 <= grp_fu_154_p2(21 - 1 downto 0);
end behav;
