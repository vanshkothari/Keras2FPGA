-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity decoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of decoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv26_3FFFD0C : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110100001100";
    constant ap_const_lv26_1F6 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000111110110";
    constant ap_const_lv26_4AC : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010010101100";
    constant ap_const_lv26_3FFFB3C : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101100111100";
    constant ap_const_lv26_3FFFBAD : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101110101101";
    constant ap_const_lv26_403 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010000000011";
    constant ap_const_lv26_3FFFD6D : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110101101101";
    constant ap_const_lv26_43B : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010000111011";
    constant ap_const_lv26_3FFFE3F : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111000111111";
    constant ap_const_lv26_3FFFB53 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101101010011";
    constant ap_const_lv26_3FFFC54 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110001010100";
    constant ap_const_lv26_3FFFD5B : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110101011011";
    constant ap_const_lv26_3FFFB41 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101101000001";
    constant ap_const_lv26_128 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100101000";
    constant ap_const_lv26_3FFFCBF : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110010111111";
    constant ap_const_lv26_367 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001101100111";
    constant ap_const_lv26_2DE : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001011011110";
    constant ap_const_lv26_3FFFC79 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110001111001";
    constant ap_const_lv26_449 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010001001001";
    constant ap_const_lv26_3FFFCA8 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110010101000";
    constant ap_const_lv26_499 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010010011001";
    constant ap_const_lv25_1FFFF7A : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111101111010";
    constant ap_const_lv26_2B5 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001010110101";
    constant ap_const_lv26_473 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010001110011";
    constant ap_const_lv26_3FFFC68 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110001101000";
    constant ap_const_lv26_3FFFE26 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111000100110";
    constant ap_const_lv26_3FFFC94 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110010010100";
    constant ap_const_lv26_447 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010001000111";
    constant ap_const_lv26_4FD : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010011111101";
    constant ap_const_lv26_3FFFC0B : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110000001011";
    constant ap_const_lv23_26 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000100110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv16_FF8C : STD_LOGIC_VECTOR (15 downto 0) := "1111111110001100";
    constant ap_const_lv16_14D : STD_LOGIC_VECTOR (15 downto 0) := "0000000101001101";
    constant ap_const_lv16_1CE : STD_LOGIC_VECTOR (15 downto 0) := "0000000111001110";
    constant ap_const_lv16_114 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100010100";
    constant ap_const_lv16_266 : STD_LOGIC_VECTOR (15 downto 0) := "0000001001100110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv16_FE : STD_LOGIC_VECTOR (15 downto 0) := "0000000011111110";
    constant ap_const_lv16_1C7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000111000111";
    constant ap_const_lv16_1CF : STD_LOGIC_VECTOR (15 downto 0) := "0000000111001111";
    constant ap_const_lv16_213 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv16_254 : STD_LOGIC_VECTOR (15 downto 0) := "0000001001010100";
    constant ap_const_lv16_196 : STD_LOGIC_VECTOR (15 downto 0) := "0000000110010110";
    constant ap_const_lv16_1D7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000111010111";
    constant ap_const_lv16_1B1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000110110001";
    constant ap_const_lv16_FF29 : STD_LOGIC_VECTOR (15 downto 0) := "1111111100101001";
    constant ap_const_lv14_1DA : STD_LOGIC_VECTOR (13 downto 0) := "00000111011010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal reg_501 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal reg_505 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_509 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal reg_513 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_517 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal sext_ln70_fu_521_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln70_reg_876 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln42_4_reg_884 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal trunc_ln42_5_reg_889 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_6_reg_894 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_7_reg_899 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_8_reg_904 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_10_reg_909 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_11_reg_914 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_12_reg_919 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal trunc_ln42_13_reg_924 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_14_reg_929 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_15_reg_934 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_1_val_read_reg_939 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln70_46_fu_529_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln70_46_reg_945 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln42_16_reg_953 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_18_reg_958 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_19_reg_963 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_274_fu_583_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_274_reg_968 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_256_fu_594_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_256_reg_973 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_258_fu_606_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_258_reg_978 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_260_fu_617_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_260_reg_983 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_262_fu_628_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_262_reg_988 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_s_reg_993 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln58_264_fu_654_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_264_reg_998 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_266_fu_665_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_266_reg_1003 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_268_fu_676_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_268_reg_1008 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_270_fu_687_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_270_reg_1013 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_30_reg_1018 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln58_272_fu_715_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_272_reg_1023 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_276_fu_726_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_276_reg_1028 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_278_fu_737_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_278_reg_1033 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_280_fu_748_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_280_reg_1038 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_port_reg_data_1_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_148_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_148_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal grp_fu_149_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_149_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_150_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln70_45_fu_634_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_150_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_151_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln70_44_fu_692_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_151_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_149_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_151_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_148_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_150_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln70_46_fu_529_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_537_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_537_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_87_fu_549_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_87_fu_549_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln73_fu_545_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln73_25_fu_557_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln73_fu_561_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln42_25_fu_567_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_273_fu_577_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_fu_589_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_257_fu_600_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_259_fu_612_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_261_fu_623_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_s_fu_638_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln58_263_fu_648_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_265_fu_659_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_267_fu_670_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_269_fu_681_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_30_fu_699_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln58_271_fu_709_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_275_fu_720_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_277_fu_731_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln42_fu_696_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_279_fu_742_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_281_fu_756_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_283_fu_767_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln58_fu_753_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln58_285_fu_778_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln58_3_fu_784_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_282_fu_762_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_284_fu_773_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_286_fu_788_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component decoder_mul_16s_13s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component decoder_mul_16s_12s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;



begin
    mul_16s_13s_26_1_1_U1 : component decoder_mul_16s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_148_p0,
        din1 => grp_fu_148_p1,
        dout => grp_fu_148_p2);

    mul_16s_12s_26_1_1_U2 : component decoder_mul_16s_12s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 12,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_149_p0,
        din1 => grp_fu_149_p1,
        dout => grp_fu_149_p2);

    mul_16s_13s_26_1_1_U3 : component decoder_mul_16s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_150_p0,
        din1 => grp_fu_150_p1,
        dout => grp_fu_150_p2);

    mul_16s_13s_26_1_1_U4 : component decoder_mul_16s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_151_p0,
        din1 => grp_fu_151_p1,
        dout => grp_fu_151_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_ce))) then
                add_ln58_256_reg_973 <= add_ln58_256_fu_594_p2;
                add_ln58_258_reg_978 <= add_ln58_258_fu_606_p2;
                add_ln58_260_reg_983 <= add_ln58_260_fu_617_p2;
                add_ln58_262_reg_988 <= add_ln58_262_fu_628_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_ce))) then
                add_ln58_264_reg_998 <= add_ln58_264_fu_654_p2;
                add_ln58_266_reg_1003 <= add_ln58_266_fu_665_p2;
                add_ln58_268_reg_1008 <= add_ln58_268_fu_676_p2;
                add_ln58_270_reg_1013 <= add_ln58_270_fu_687_p2;
                trunc_ln42_s_reg_993 <= trunc_ln42_s_fu_638_p1(24 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                add_ln58_272_reg_1023 <= add_ln58_272_fu_715_p2;
                add_ln58_276_reg_1028 <= add_ln58_276_fu_726_p2;
                add_ln58_278_reg_1033 <= add_ln58_278_fu_737_p2;
                add_ln58_280_reg_1038 <= add_ln58_280_fu_748_p2;
                trunc_ln42_30_reg_1018 <= trunc_ln42_30_fu_699_p1(22 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                add_ln58_274_reg_968 <= add_ln58_274_fu_583_p2;
                data_1_val_read_reg_939 <= ap_port_reg_data_1_val;
                sext_ln70_46_reg_945 <= sext_ln70_46_fu_529_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_port_reg_data_1_val <= data_1_val;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_501 <= grp_fu_149_p2(25 downto 10);
                reg_505 <= grp_fu_151_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_509 <= grp_fu_148_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_513 <= grp_fu_150_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_517 <= grp_fu_151_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sext_ln70_reg_876 <= sext_ln70_fu_521_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                trunc_ln42_10_reg_909 <= grp_fu_148_p2(25 downto 10);
                trunc_ln42_11_reg_914 <= grp_fu_150_p2(25 downto 10);
                trunc_ln42_8_reg_904 <= grp_fu_149_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                trunc_ln42_12_reg_919 <= grp_fu_149_p2(25 downto 10);
                trunc_ln42_13_reg_924 <= grp_fu_151_p2(25 downto 10);
                trunc_ln42_14_reg_929 <= grp_fu_148_p2(25 downto 10);
                trunc_ln42_15_reg_934 <= grp_fu_150_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                trunc_ln42_16_reg_953 <= grp_fu_149_p2(25 downto 10);
                trunc_ln42_18_reg_958 <= grp_fu_148_p2(25 downto 10);
                trunc_ln42_19_reg_963 <= grp_fu_150_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                trunc_ln42_4_reg_884 <= grp_fu_149_p2(25 downto 10);
                trunc_ln42_5_reg_889 <= grp_fu_151_p2(25 downto 10);
                trunc_ln42_6_reg_894 <= grp_fu_148_p2(25 downto 10);
                trunc_ln42_7_reg_899 <= grp_fu_150_p2(25 downto 10);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln58_256_fu_594_p2 <= std_logic_vector(unsigned(add_ln58_fu_589_p2) + unsigned(reg_501));
    add_ln58_257_fu_600_p2 <= std_logic_vector(unsigned(reg_517) + unsigned(ap_const_lv16_1CE));
    add_ln58_258_fu_606_p2 <= std_logic_vector(unsigned(add_ln58_257_fu_600_p2) + unsigned(reg_505));
    add_ln58_259_fu_612_p2 <= std_logic_vector(unsigned(trunc_ln42_18_reg_958) + unsigned(ap_const_lv16_114));
    add_ln58_260_fu_617_p2 <= std_logic_vector(unsigned(add_ln58_259_fu_612_p2) + unsigned(reg_509));
    add_ln58_261_fu_623_p2 <= std_logic_vector(unsigned(trunc_ln42_19_reg_963) + unsigned(ap_const_lv16_266));
    add_ln58_262_fu_628_p2 <= std_logic_vector(unsigned(add_ln58_261_fu_623_p2) + unsigned(reg_513));
    add_ln58_263_fu_648_p2 <= std_logic_vector(unsigned(reg_501) + unsigned(ap_const_lv16_FE));
    add_ln58_264_fu_654_p2 <= std_logic_vector(unsigned(add_ln58_263_fu_648_p2) + unsigned(trunc_ln42_4_reg_884));
    add_ln58_265_fu_659_p2 <= std_logic_vector(unsigned(reg_505) + unsigned(ap_const_lv16_1C7));
    add_ln58_266_fu_665_p2 <= std_logic_vector(unsigned(add_ln58_265_fu_659_p2) + unsigned(trunc_ln42_5_reg_889));
    add_ln58_267_fu_670_p2 <= std_logic_vector(unsigned(reg_509) + unsigned(ap_const_lv16_1CF));
    add_ln58_268_fu_676_p2 <= std_logic_vector(unsigned(add_ln58_267_fu_670_p2) + unsigned(trunc_ln42_6_reg_894));
    add_ln58_269_fu_681_p2 <= std_logic_vector(unsigned(reg_513) + unsigned(ap_const_lv16_213));
    add_ln58_270_fu_687_p2 <= std_logic_vector(unsigned(add_ln58_269_fu_681_p2) + unsigned(trunc_ln42_7_reg_899));
    add_ln58_271_fu_709_p2 <= std_logic_vector(unsigned(reg_501) + unsigned(ap_const_lv16_254));
    add_ln58_272_fu_715_p2 <= std_logic_vector(unsigned(add_ln58_271_fu_709_p2) + unsigned(trunc_ln42_8_reg_904));
    add_ln58_273_fu_577_p2 <= std_logic_vector(unsigned(trunc_ln42_25_fu_567_p4) + unsigned(ap_const_lv16_FF8C));
    add_ln58_274_fu_583_p2 <= std_logic_vector(unsigned(add_ln58_273_fu_577_p2) + unsigned(reg_517));
    add_ln58_275_fu_720_p2 <= std_logic_vector(unsigned(reg_505) + unsigned(ap_const_lv16_196));
    add_ln58_276_fu_726_p2 <= std_logic_vector(unsigned(add_ln58_275_fu_720_p2) + unsigned(trunc_ln42_10_reg_909));
    add_ln58_277_fu_731_p2 <= std_logic_vector(unsigned(reg_509) + unsigned(ap_const_lv16_1D7));
    add_ln58_278_fu_737_p2 <= std_logic_vector(unsigned(add_ln58_277_fu_731_p2) + unsigned(trunc_ln42_11_reg_914));
    add_ln58_279_fu_742_p2 <= std_logic_vector(signed(sext_ln42_fu_696_p1) + signed(ap_const_lv16_196));
    add_ln58_280_fu_748_p2 <= std_logic_vector(unsigned(add_ln58_279_fu_742_p2) + unsigned(trunc_ln42_12_reg_919));
    add_ln58_281_fu_756_p2 <= std_logic_vector(unsigned(reg_509) + unsigned(ap_const_lv16_1B1));
    add_ln58_282_fu_762_p2 <= std_logic_vector(unsigned(add_ln58_281_fu_756_p2) + unsigned(trunc_ln42_13_reg_924));
    add_ln58_283_fu_767_p2 <= std_logic_vector(unsigned(reg_513) + unsigned(ap_const_lv16_FF29));
    add_ln58_284_fu_773_p2 <= std_logic_vector(unsigned(add_ln58_283_fu_767_p2) + unsigned(trunc_ln42_14_reg_929));
    add_ln58_285_fu_778_p2 <= std_logic_vector(signed(sext_ln58_fu_753_p1) + signed(ap_const_lv14_1DA));
    add_ln58_286_fu_788_p2 <= std_logic_vector(signed(sext_ln58_3_fu_784_p1) + signed(trunc_ln42_15_reg_934));
    add_ln58_fu_589_p2 <= std_logic_vector(unsigned(trunc_ln42_16_reg_953) + unsigned(ap_const_lv16_14D));
    add_ln73_fu_561_p2 <= std_logic_vector(signed(sext_ln73_fu_545_p1) + signed(sext_ln73_25_fu_557_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage1_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage2_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage3_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage4_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage5_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage6_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage7_subdone <= (ap_const_logic_0 = ap_ce);
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= add_ln58_256_reg_973;
    ap_return_1 <= add_ln58_258_reg_978;
    ap_return_10 <= add_ln58_276_reg_1028;
    ap_return_11 <= add_ln58_278_reg_1033;
    ap_return_12 <= add_ln58_280_reg_1038;
    ap_return_13 <= add_ln58_282_fu_762_p2;
    ap_return_14 <= add_ln58_284_fu_773_p2;
    ap_return_15 <= add_ln58_286_fu_788_p2;
    ap_return_2 <= add_ln58_260_reg_983;
    ap_return_3 <= add_ln58_262_reg_988;
    ap_return_4 <= add_ln58_264_reg_998;
    ap_return_5 <= add_ln58_266_reg_1003;
    ap_return_6 <= add_ln58_268_reg_1008;
    ap_return_7 <= add_ln58_270_reg_1013;
    ap_return_8 <= add_ln58_272_reg_1023;
    ap_return_9 <= add_ln58_274_reg_968;

    grp_fu_148_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, sext_ln70_fu_521_p1, sext_ln70_reg_876, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, sext_ln70_46_fu_529_p1, sext_ln70_46_reg_945, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_148_p0 <= sext_ln70_46_reg_945(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_148_p0 <= sext_ln70_46_fu_529_p1(16 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_148_p0 <= sext_ln70_reg_876(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_148_p0 <= sext_ln70_fu_521_p1(16 - 1 downto 0);
        else 
            grp_fu_148_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_148_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_148_p1 <= ap_const_lv26_43B(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_148_p1 <= ap_const_lv26_3FFFD6D(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_148_p1 <= ap_const_lv26_403(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_148_p1 <= ap_const_lv26_3FFFBAD(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_148_p1 <= ap_const_lv26_3FFFB3C(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_148_p1 <= ap_const_lv26_4AC(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_148_p1 <= ap_const_lv26_1F6(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_148_p1 <= ap_const_lv26_3FFFD0C(13 - 1 downto 0);
            else 
                grp_fu_148_p1 <= "XXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_148_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_149_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, sext_ln70_fu_521_p1, sext_ln70_reg_876, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, sext_ln70_46_fu_529_p1, sext_ln70_46_reg_945, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_149_p0 <= sext_ln70_46_reg_945(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_149_p0 <= sext_ln70_46_fu_529_p1(16 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_149_p0 <= sext_ln70_reg_876(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_149_p0 <= sext_ln70_fu_521_p1(16 - 1 downto 0);
        else 
            grp_fu_149_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_149_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_149_p1 <= ap_const_lv26_3FFFCBF(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_149_p1 <= ap_const_lv26_128(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_149_p1 <= ap_const_lv26_3FFFB41(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_149_p1 <= ap_const_lv26_3FFFD5B(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_149_p1 <= ap_const_lv26_3FFFC54(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_149_p1 <= ap_const_lv26_3FFFB53(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_149_p1 <= ap_const_lv26_3FFFE3F(12 - 1 downto 0);
            else 
                grp_fu_149_p1 <= "XXXXXXXXXXXX";
            end if;
        else 
            grp_fu_149_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_150_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, sext_ln70_fu_521_p1, sext_ln70_reg_876, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, sext_ln70_46_fu_529_p1, sext_ln70_46_reg_945, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, sext_ln70_45_fu_634_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_150_p0 <= sext_ln70_45_fu_634_p1(16 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_150_p0 <= sext_ln70_46_reg_945(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_150_p0 <= sext_ln70_46_fu_529_p1(16 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_150_p0 <= sext_ln70_reg_876(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_150_p0 <= sext_ln70_fu_521_p1(16 - 1 downto 0);
        else 
            grp_fu_150_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_150_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_150_p1 <= ap_const_lv26_2B5(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_150_p1 <= ap_const_lv25_1FFFF7A(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_150_p1 <= ap_const_lv26_499(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_150_p1 <= ap_const_lv26_3FFFCA8(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_150_p1 <= ap_const_lv26_449(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_150_p1 <= ap_const_lv26_3FFFC79(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_150_p1 <= ap_const_lv26_2DE(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_150_p1 <= ap_const_lv26_367(13 - 1 downto 0);
            else 
                grp_fu_150_p1 <= "XXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_150_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_151_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, sext_ln70_fu_521_p1, sext_ln70_reg_876, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, sext_ln70_46_fu_529_p1, sext_ln70_46_reg_945, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, sext_ln70_44_fu_692_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_151_p0 <= sext_ln70_44_fu_692_p1(16 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_151_p0 <= sext_ln70_46_reg_945(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_151_p0 <= sext_ln70_46_fu_529_p1(16 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_151_p0 <= sext_ln70_reg_876(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_151_p0 <= sext_ln70_fu_521_p1(16 - 1 downto 0);
        else 
            grp_fu_151_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_151_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_151_p1 <= ap_const_lv23_26(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_151_p1 <= ap_const_lv26_3FFFC0B(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_151_p1 <= ap_const_lv26_4FD(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_151_p1 <= ap_const_lv26_447(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_151_p1 <= ap_const_lv26_3FFFC94(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_151_p1 <= ap_const_lv26_3FFFE26(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_151_p1 <= ap_const_lv26_3FFFC68(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_151_p1 <= ap_const_lv26_473(13 - 1 downto 0);
            else 
                grp_fu_151_p1 <= "XXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_151_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

        sext_ln42_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln42_s_reg_993),16));

        sext_ln58_3_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_285_fu_778_p2),16));

        sext_ln58_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln42_30_reg_1018),14));

        sext_ln70_44_fu_692_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_1_val_read_reg_939),23));

        sext_ln70_45_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_1_val_read_reg_939),25));

    sext_ln70_46_fu_529_p0 <= ap_port_reg_data_1_val;
        sext_ln70_46_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln70_46_fu_529_p0),26));

        sext_ln70_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_0_val),26));

        sext_ln73_25_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_87_fu_549_p3),26));

        sext_ln73_fu_545_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_537_p3),26));

    tmp_87_fu_549_p1 <= ap_port_reg_data_1_val;
    tmp_87_fu_549_p3 <= (tmp_87_fu_549_p1 & ap_const_lv3_0);
    tmp_fu_537_p1 <= ap_port_reg_data_1_val;
    tmp_fu_537_p3 <= (tmp_fu_537_p1 & ap_const_lv8_0);
    trunc_ln42_25_fu_567_p4 <= add_ln73_fu_561_p2(25 downto 10);
    trunc_ln42_30_fu_699_p1 <= grp_fu_151_p2(23 - 1 downto 0);
    trunc_ln42_s_fu_638_p1 <= grp_fu_150_p2(25 - 1 downto 0);
end behav;
