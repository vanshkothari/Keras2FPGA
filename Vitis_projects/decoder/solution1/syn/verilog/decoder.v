// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="decoder_decoder,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.119000,HLS_SYN_LAT=29,HLS_SYN_TPT=8,HLS_SYN_MEM=9,HLS_SYN_DSP=0,HLS_SYN_FF=7714,HLS_SYN_LUT=13067,HLS_VERSION=2024_1}" *)

module decoder (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_24_0,
        input_24_0_ap_vld,
        input_24_1,
        input_24_1_ap_vld,
        layer5_out,
        layer5_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] input_24_0;
input   input_24_0_ap_vld;
input  [15:0] input_24_1;
input   input_24_1_ap_vld;
output  [255:0] layer5_out;
output   layer5_out_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg layer5_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_subdone;
reg   [15:0] input_24_0_preg;
reg   [15:0] input_24_0_in_sig;
reg    input_24_0_ap_vld_preg;
reg    input_24_0_ap_vld_in_sig;
reg   [15:0] input_24_1_preg;
reg   [15:0] input_24_1_in_sig;
reg    input_24_1_ap_vld_preg;
reg    input_24_1_ap_vld_in_sig;
reg    input_24_0_blk_n;
wire    ap_block_pp0_stage0;
reg    input_24_1_blk_n;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_pp0_stage0_11001;
reg   [15:0] layer2_out_reg_329;
reg   [15:0] layer2_out_1_reg_334;
reg   [15:0] layer2_out_2_reg_339;
reg   [15:0] layer2_out_3_reg_344;
reg   [15:0] layer2_out_4_reg_349;
reg   [15:0] layer2_out_5_reg_354;
reg   [15:0] layer2_out_6_reg_359;
reg   [15:0] layer2_out_7_reg_364;
reg   [15:0] layer2_out_8_reg_369;
reg   [15:0] layer2_out_9_reg_374;
reg   [15:0] layer2_out_10_reg_379;
reg   [15:0] layer2_out_11_reg_384;
reg   [15:0] layer2_out_12_reg_389;
reg   [15:0] layer2_out_13_reg_394;
reg   [15:0] layer2_out_14_reg_399;
reg   [15:0] layer2_out_15_reg_404;
reg   [15:0] layer3_out_reg_409;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg   [15:0] layer3_out_1_reg_414;
reg   [15:0] layer3_out_2_reg_419;
reg   [15:0] layer3_out_3_reg_424;
reg   [15:0] layer3_out_4_reg_429;
reg   [15:0] layer3_out_5_reg_434;
reg   [15:0] layer3_out_6_reg_439;
reg   [15:0] layer3_out_7_reg_444;
reg   [15:0] layer3_out_8_reg_449;
reg   [15:0] layer3_out_9_reg_454;
reg   [15:0] layer3_out_10_reg_459;
reg   [15:0] layer3_out_11_reg_464;
reg   [15:0] layer3_out_12_reg_469;
reg   [15:0] layer3_out_13_reg_474;
reg   [15:0] layer3_out_14_reg_479;
reg   [15:0] layer3_out_15_reg_484;
reg   [15:0] layer4_out_reg_489;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
reg   [15:0] layer4_out_1_reg_494;
reg   [15:0] layer4_out_2_reg_499;
reg   [15:0] layer4_out_3_reg_504;
reg   [15:0] layer4_out_4_reg_509;
reg   [15:0] layer4_out_5_reg_514;
reg   [15:0] layer4_out_6_reg_519;
reg   [15:0] layer4_out_7_reg_524;
reg   [15:0] layer4_out_8_reg_529;
reg   [15:0] layer4_out_9_reg_534;
reg   [15:0] layer4_out_10_reg_539;
reg   [15:0] layer4_out_11_reg_544;
reg   [15:0] layer4_out_12_reg_549;
reg   [15:0] layer4_out_13_reg_554;
reg   [15:0] layer4_out_14_reg_559;
reg   [15:0] layer4_out_15_reg_564;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_subdone;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_done;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_idle;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ready;
reg    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ce;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_0;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_1;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_2;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_3;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_4;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_5;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_6;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_7;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_8;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_9;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_10;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_11;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_12;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_13;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_14;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_15;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call10;
reg    ap_block_pp0_stage0_11001_ignoreCallOp33;
wire    ap_block_pp0_stage1_11001_ignoreCallOp34;
wire    ap_block_pp0_stage2_11001_ignoreCallOp35;
wire    ap_block_pp0_stage3_11001_ignoreCallOp36;
wire    ap_block_pp0_stage4_11001_ignoreCallOp37;
wire    ap_block_pp0_stage5_11001_ignoreCallOp38;
wire    ap_block_pp0_stage6_11001_ignoreCallOp39;
wire    ap_block_pp0_stage7_11001_ignoreCallOp40;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_CS_fsm_pp0_stage6;
wire    call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_ready;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_0;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_1;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_2;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_3;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_4;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_5;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_6;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_7;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_8;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_9;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_10;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_11;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_12;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_13;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_14;
wire   [15:0] call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_15;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_done;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_idle;
wire    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ready;
reg    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ce;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_0;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_1;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_2;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_3;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_4;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_5;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_6;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_7;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_8;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_9;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_10;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_11;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_12;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_13;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_14;
wire   [15:0] grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_15;
wire    ap_block_pp0_stage2_11001_ignoreCallOp75;
wire    ap_block_pp0_stage3_11001_ignoreCallOp76;
wire    ap_block_pp0_stage4_11001_ignoreCallOp77;
wire    ap_block_pp0_stage5_11001_ignoreCallOp78;
wire    ap_block_pp0_stage6_11001_ignoreCallOp79;
wire    ap_block_pp0_stage7_11001_ignoreCallOp80;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call44;
reg    ap_block_pp0_stage0_11001_ignoreCallOp81;
wire    ap_block_pp0_stage1_11001_ignoreCallOp82;
wire    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start;
wire    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_done;
wire    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_idle;
wire    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ready;
reg    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ce;
wire   [255:0] grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_return;
wire    ap_block_pp0_stage4_11001_ignoreCallOp101;
wire    ap_block_pp0_stage5_11001_ignoreCallOp102;
wire    ap_block_pp0_stage6_11001_ignoreCallOp103;
wire    ap_block_pp0_stage7_11001_ignoreCallOp104;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call61;
reg    ap_block_pp0_stage0_11001_ignoreCallOp105;
wire    ap_block_pp0_stage1_11001_ignoreCallOp106;
wire    ap_block_pp0_stage2_11001_ignoreCallOp107;
wire    ap_block_pp0_stage3_11001_ignoreCallOp108;
reg    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg;
reg    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_onepulse_ap_start;
wire    ap_block_pp0_stage0_ignoreCallOp33;
wire    ap_block_pp0_stage1_ignoreCallOp58;
reg    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg;
wire    ap_block_pp0_stage2_ignoreCallOp75;
reg    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg;
wire    ap_block_pp0_stage4_ignoreCallOp101;
wire    ap_block_pp0_stage5_01001;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage7_11001;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage4_11001;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage6_11001;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 input_24_0_preg = 16'd0;
#0 input_24_0_ap_vld_preg = 1'b0;
#0 input_24_1_preg = 16'd0;
#0 input_24_1_ap_vld_preg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg = 1'b0;
#0 grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg = 1'b0;
#0 grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg = 1'b0;
end

decoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start),
    .ap_done(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_done),
    .ap_idle(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_idle),
    .ap_ready(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ready),
    .ap_ce(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ce),
    .data_0_val(input_24_0_in_sig),
    .data_1_val(input_24_1_in_sig),
    .ap_return_0(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_0),
    .ap_return_1(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_1),
    .ap_return_2(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_2),
    .ap_return_3(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_3),
    .ap_return_4(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_4),
    .ap_return_5(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_5),
    .ap_return_6(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_6),
    .ap_return_7(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_7),
    .ap_return_8(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_8),
    .ap_return_9(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_9),
    .ap_return_10(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_10),
    .ap_return_11(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_11),
    .ap_return_12(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_12),
    .ap_return_13(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_13),
    .ap_return_14(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_14),
    .ap_return_15(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_15)
);

decoder_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67(
    .ap_ready(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_ready),
    .data_0_val(layer2_out_reg_329),
    .data_1_val(layer2_out_1_reg_334),
    .data_2_val(layer2_out_2_reg_339),
    .data_3_val(layer2_out_3_reg_344),
    .data_4_val(layer2_out_4_reg_349),
    .data_5_val(layer2_out_5_reg_354),
    .data_6_val(layer2_out_6_reg_359),
    .data_7_val(layer2_out_7_reg_364),
    .data_8_val(layer2_out_8_reg_369),
    .data_9_val(layer2_out_9_reg_374),
    .data_10_val(layer2_out_10_reg_379),
    .data_11_val(layer2_out_11_reg_384),
    .data_12_val(layer2_out_12_reg_389),
    .data_13_val(layer2_out_13_reg_394),
    .data_14_val(layer2_out_14_reg_399),
    .data_15_val(layer2_out_15_reg_404),
    .ap_return_0(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_0),
    .ap_return_1(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_1),
    .ap_return_2(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_2),
    .ap_return_3(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_3),
    .ap_return_4(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_4),
    .ap_return_5(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_5),
    .ap_return_6(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_6),
    .ap_return_7(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_7),
    .ap_return_8(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_8),
    .ap_return_9(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_9),
    .ap_return_10(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_10),
    .ap_return_11(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_11),
    .ap_return_12(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_12),
    .ap_return_13(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_13),
    .ap_return_14(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_14),
    .ap_return_15(call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_15),
    .ap_rst(ap_rst)
);

decoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start),
    .ap_done(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_done),
    .ap_idle(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_idle),
    .ap_ready(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ready),
    .ap_ce(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ce),
    .data_0_val(layer3_out_reg_409),
    .data_1_val(layer3_out_1_reg_414),
    .data_2_val(layer3_out_2_reg_419),
    .data_3_val(layer3_out_3_reg_424),
    .data_4_val(layer3_out_4_reg_429),
    .data_5_val(layer3_out_5_reg_434),
    .data_6_val(layer3_out_6_reg_439),
    .data_7_val(layer3_out_7_reg_444),
    .data_8_val(layer3_out_8_reg_449),
    .data_9_val(layer3_out_9_reg_454),
    .data_10_val(layer3_out_10_reg_459),
    .data_11_val(layer3_out_11_reg_464),
    .data_12_val(layer3_out_12_reg_469),
    .data_13_val(layer3_out_13_reg_474),
    .data_14_val(layer3_out_14_reg_479),
    .data_15_val(layer3_out_15_reg_484),
    .ap_return_0(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_0),
    .ap_return_1(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_1),
    .ap_return_2(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_2),
    .ap_return_3(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_3),
    .ap_return_4(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_4),
    .ap_return_5(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_5),
    .ap_return_6(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_6),
    .ap_return_7(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_7),
    .ap_return_8(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_8),
    .ap_return_9(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_9),
    .ap_return_10(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_10),
    .ap_return_11(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_11),
    .ap_return_12(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_12),
    .ap_return_13(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_13),
    .ap_return_14(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_14),
    .ap_return_15(grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_15)
);

decoder_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start),
    .ap_done(grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_done),
    .ap_idle(grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_idle),
    .ap_ready(grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ready),
    .ap_ce(grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ce),
    .data_0_val(layer4_out_reg_489),
    .data_1_val(layer4_out_1_reg_494),
    .data_2_val(layer4_out_2_reg_499),
    .data_3_val(layer4_out_3_reg_504),
    .data_4_val(layer4_out_4_reg_509),
    .data_5_val(layer4_out_5_reg_514),
    .data_6_val(layer4_out_6_reg_519),
    .data_7_val(layer4_out_7_reg_524),
    .data_8_val(layer4_out_8_reg_529),
    .data_9_val(layer4_out_9_reg_534),
    .data_10_val(layer4_out_10_reg_539),
    .data_11_val(layer4_out_11_reg_544),
    .data_12_val(layer4_out_12_reg_549),
    .data_13_val(layer4_out_13_reg_554),
    .data_14_val(layer4_out_14_reg_559),
    .data_15_val(layer4_out_15_reg_564),
    .ap_return(grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp33) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg <= 1'b1;
        end else if ((grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ready == 1'b1)) begin
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg <= 1'b1;
        end else if ((grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ready == 1'b1)) begin
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg <= 1'b1;
        end else if ((grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ready == 1'b1)) begin
            grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        input_24_0_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            input_24_0_ap_vld_preg <= 1'b0;
        end else if ((~((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b0)) & (input_24_0_ap_vld == 1'b1))) begin
            input_24_0_ap_vld_preg <= input_24_0_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        input_24_0_preg <= 16'd0;
    end else begin
        if ((~((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b0)) & (input_24_0_ap_vld == 1'b1))) begin
            input_24_0_preg <= input_24_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        input_24_1_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            input_24_1_ap_vld_preg <= 1'b0;
        end else if ((~((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b0)) & (input_24_1_ap_vld == 1'b1))) begin
            input_24_1_ap_vld_preg <= input_24_1_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        input_24_1_preg <= 16'd0;
    end else begin
        if ((~((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b0)) & (input_24_1_ap_vld == 1'b1))) begin
            input_24_1_preg <= input_24_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_out_10_reg_379 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_10;
        layer2_out_11_reg_384 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_11;
        layer2_out_12_reg_389 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_12;
        layer2_out_13_reg_394 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_13;
        layer2_out_14_reg_399 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_14;
        layer2_out_15_reg_404 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_15;
        layer2_out_1_reg_334 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_1;
        layer2_out_2_reg_339 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_2;
        layer2_out_3_reg_344 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_3;
        layer2_out_4_reg_349 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_4;
        layer2_out_5_reg_354 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_5;
        layer2_out_6_reg_359 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_6;
        layer2_out_7_reg_364 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_7;
        layer2_out_8_reg_369 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_8;
        layer2_out_9_reg_374 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_9;
        layer2_out_reg_329 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        layer3_out_10_reg_459 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_10;
        layer3_out_11_reg_464 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_11;
        layer3_out_12_reg_469 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_12;
        layer3_out_13_reg_474 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_13;
        layer3_out_14_reg_479 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_14;
        layer3_out_15_reg_484 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_15;
        layer3_out_1_reg_414 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_1;
        layer3_out_2_reg_419 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_2;
        layer3_out_3_reg_424 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_3;
        layer3_out_4_reg_429 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_4;
        layer3_out_5_reg_434 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_5;
        layer3_out_6_reg_439 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_6;
        layer3_out_7_reg_444 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_7;
        layer3_out_8_reg_449 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_8;
        layer3_out_9_reg_454 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_9;
        layer3_out_reg_409 <= call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_67_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        layer4_out_10_reg_539 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_10;
        layer4_out_11_reg_544 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_11;
        layer4_out_12_reg_549 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_12;
        layer4_out_13_reg_554 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_13;
        layer4_out_14_reg_559 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_14;
        layer4_out_15_reg_564 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_15;
        layer4_out_1_reg_494 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_1;
        layer4_out_2_reg_499 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_2;
        layer4_out_3_reg_504 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_3;
        layer4_out_4_reg_509 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_4;
        layer4_out_5_reg_514 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_5;
        layer4_out_6_reg_519 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_6;
        layer4_out_7_reg_524 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_7;
        layer4_out_8_reg_529 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_8;
        layer4_out_9_reg_534 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_9;
        layer4_out_reg_489 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_return_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp40) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp39) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp38) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp37) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp36) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp35) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp34) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp33) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_onepulse_ap_start = 1'b1;
    end else begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_onepulse_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp82) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp81) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp80) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp79) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp78) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp77) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp76) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp75) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp108) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp107) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp106) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp105) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp104) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp103) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp102) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp101) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ce = 1'b1;
    end else begin
        grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((input_24_0_ap_vld == 1'b1)) begin
        input_24_0_ap_vld_in_sig = input_24_0_ap_vld;
    end else begin
        input_24_0_ap_vld_in_sig = input_24_0_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_24_0_blk_n = input_24_0_ap_vld;
    end else begin
        input_24_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((input_24_0_ap_vld == 1'b1)) begin
        input_24_0_in_sig = input_24_0;
    end else begin
        input_24_0_in_sig = input_24_0_preg;
    end
end

always @ (*) begin
    if ((input_24_1_ap_vld == 1'b1)) begin
        input_24_1_ap_vld_in_sig = input_24_1_ap_vld;
    end else begin
        input_24_1_ap_vld_in_sig = input_24_1_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_24_1_blk_n = input_24_1_ap_vld;
    end else begin
        input_24_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((input_24_1_ap_vld == 1'b1)) begin
        input_24_1_in_sig = input_24_1;
    end else begin
        input_24_1_in_sig = input_24_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        layer5_out_ap_vld = 1'b1;
    end else begin
        layer5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp105 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_ignore_call61));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp33 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_ignore_call10));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp81 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_ignore_call44));
end

assign ap_block_pp0_stage0_ignoreCallOp33 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp106 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp34 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp82 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_ignoreCallOp58 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp107 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp35 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp75 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_ignoreCallOp75 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp108 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp36 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp76 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001_ignoreCallOp101 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001_ignoreCallOp37 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001_ignoreCallOp77 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_ignoreCallOp101 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_ignoreCallOp102 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_ignoreCallOp38 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_ignoreCallOp78 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001_ignoreCallOp103 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001_ignoreCallOp39 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001_ignoreCallOp79 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001_ignoreCallOp104 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001_ignoreCallOp40 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001_ignoreCallOp80 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((input_24_1_ap_vld_in_sig == 1'b0) | (input_24_0_ap_vld_in_sig == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call10 = ((input_24_1_ap_vld_in_sig == 1'b0) | (input_24_0_ap_vld_in_sig == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call44 = ((input_24_1_ap_vld_in_sig == 1'b0) | (input_24_0_ap_vld_in_sig == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call61 = ((input_24_1_ap_vld_in_sig == 1'b0) | (input_24_0_ap_vld_in_sig == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start = (grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_onepulse_ap_start | grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_59_ap_start_reg);

assign grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start = grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_87_ap_start_reg;

assign grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start = grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_start_reg;

assign layer5_out = grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_fu_107_ap_return;

endmodule //decoder
