-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity encoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_6_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_7_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_8_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_9_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_10_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_11_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_12_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_13_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_14_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_15_val : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of encoder_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv26_56A : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010101101010";
    constant ap_const_lv26_10D : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100001101";
    constant ap_const_lv26_3FFF8F2 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111100011110010";
    constant ap_const_lv26_82C : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000100000101100";
    constant ap_const_lv26_608 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000011000001000";
    constant ap_const_lv26_3FFF72B : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111011100101011";
    constant ap_const_lv26_3FFFA34 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101000110100";
    constant ap_const_lv26_2D5 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001011010101";
    constant ap_const_lv26_3FFFA40 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101001000000";
    constant ap_const_lv26_3FFFB69 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101101101001";
    constant ap_const_lv26_12F : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100101111";
    constant ap_const_lv26_3FFF640 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111011001000000";
    constant ap_const_lv26_1CA : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000111001010";
    constant ap_const_lv26_3FFF740 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111011101000000";
    constant ap_const_lv26_3FFF54A : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111010101001010";
    constant ap_const_lv25_1FFFF05 : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111100000101";
    constant ap_const_lv26_3FFF446 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111010001000110";
    constant ap_const_lv26_3FFF5F2 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111010111110010";
    constant ap_const_lv26_3FFFC69 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110001101001";
    constant ap_const_lv26_757 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000011101010111";
    constant ap_const_lv26_33E : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001100111110";
    constant ap_const_lv26_3FFF5FA : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111010111111010";
    constant ap_const_lv26_3FFF8C9 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111100011001001";
    constant ap_const_lv26_3FFF952 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111100101010010";
    constant ap_const_lv26_312 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001100010010";
    constant ap_const_lv26_7C7 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000011111000111";
    constant ap_const_lv26_65F : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000011001011111";
    constant ap_const_lv26_3FFF66F : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111011001101111";
    constant ap_const_lv26_3FFF7B7 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111011110110111";
    constant ap_const_lv26_3FFF524 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111010100100100";
    constant ap_const_lv26_3FFFA29 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101000101001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv16_364 : STD_LOGIC_VECTOR (15 downto 0) := "0000001101100100";
    constant ap_const_lv16_5EB : STD_LOGIC_VECTOR (15 downto 0) := "0000010111101011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal reg_583 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal reg_587 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal reg_591 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_595 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_599 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal reg_603 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal reg_607 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_611 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_30_reg_943 : STD_LOGIC_VECTOR (14 downto 0);
    signal data_13_val_read_reg_948 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln70_fu_647_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln70_reg_954 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln58_123_fu_672_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_123_reg_959 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_139_fu_684_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_139_reg_964 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln73_1_fu_696_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln73_1_reg_969 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln58_124_fu_745_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_124_reg_974 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_140_fu_756_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_140_reg_979 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_5_reg_984 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln70_1_fu_767_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln70_1_reg_989 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln42_2_fu_778_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln42_2_reg_994 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln58_113_fu_789_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_113_reg_999 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_129_fu_806_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_129_reg_1004 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln42_3_fu_818_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln42_3_reg_1009 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln42_15_reg_1014 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln42_5_fu_829_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln42_5_reg_1019 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln58_116_fu_840_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_116_reg_1024 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_132_fu_858_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_132_reg_1029 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_118_fu_870_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_118_reg_1034 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_134_fu_875_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_134_reg_1039 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_125_fu_892_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_125_reg_1044 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_141_fu_908_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_141_reg_1049 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_port_reg_data_0_val : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_1_val : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_2_val : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_3_val : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_4_val : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_5_val : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_6_val : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_7_val : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_8_val : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_9_val : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_10_val : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_11_val : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_12_val : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_13_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_230_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln42_7_fu_632_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln70_2_fu_652_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln73_fu_690_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln42_fu_761_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln42_1_fu_772_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln73_2_fu_812_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln42_4_fu_823_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_230_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal grp_fu_231_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln73_4_fu_621_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_231_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_232_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln70_3_fu_627_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln42_6_fu_658_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln73_3_fu_864_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_232_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_233_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_233_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_231_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_233_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_230_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_232_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln70_3_fu_627_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln42_7_fu_632_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_30_fu_637_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln42_6_fu_658_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_122_fu_666_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln42_8_fu_663_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_138_fu_678_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_701_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_1_fu_712_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln73_6_fu_719_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln73_5_fu_708_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sub_ln73_fu_723_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln42_25_fu_729_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_121_fu_739_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_137_fu_750_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_615_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_fu_783_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_128_fu_801_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_127_fu_795_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_114_fu_834_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_131_fu_852_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_130_fu_846_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_119_fu_881_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_120_fu_887_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_135_fu_897_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_136_fu_903_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_117_fu_913_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_133_fu_922_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_126_fu_917_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_142_fu_926_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component encoder_mul_16s_14s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component encoder_mul_16s_13s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;



begin
    mul_16s_14s_26_1_1_U18 : component encoder_mul_16s_14s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 14,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_230_p0,
        din1 => grp_fu_230_p1,
        dout => grp_fu_230_p2);

    mul_16s_13s_26_1_1_U19 : component encoder_mul_16s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_231_p0,
        din1 => grp_fu_231_p1,
        dout => grp_fu_231_p2);

    mul_16s_13s_26_1_1_U20 : component encoder_mul_16s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_232_p0,
        din1 => grp_fu_232_p1,
        dout => grp_fu_232_p2);

    mul_16s_13s_26_1_1_U21 : component encoder_mul_16s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_233_p0,
        din1 => grp_fu_233_p1,
        dout => grp_fu_233_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_ce))) then
                add_ln58_113_reg_999 <= add_ln58_113_fu_789_p2;
                add_ln58_129_reg_1004 <= add_ln58_129_fu_806_p2;
                sext_ln42_2_reg_994 <= sext_ln42_2_fu_778_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                add_ln58_116_reg_1024 <= add_ln58_116_fu_840_p2;
                add_ln58_132_reg_1029 <= add_ln58_132_fu_858_p2;
                sext_ln42_5_reg_1019 <= sext_ln42_5_fu_829_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                add_ln58_118_reg_1034 <= add_ln58_118_fu_870_p2;
                add_ln58_134_reg_1039 <= add_ln58_134_fu_875_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_ce))) then
                add_ln58_123_reg_959 <= add_ln58_123_fu_672_p2;
                add_ln58_139_reg_964 <= add_ln58_139_fu_684_p2;
                data_13_val_read_reg_948 <= ap_port_reg_data_13_val;
                sext_ln70_reg_954 <= sext_ln70_fu_647_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add_ln58_124_reg_974 <= add_ln58_124_fu_745_p2;
                add_ln58_140_reg_979 <= add_ln58_140_fu_756_p2;
                sext_ln73_1_reg_969 <= sext_ln73_1_fu_696_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln58_125_reg_1044 <= add_ln58_125_fu_892_p2;
                add_ln58_141_reg_1049 <= add_ln58_141_fu_908_p2;
                trunc_ln42_30_reg_943 <= trunc_ln42_30_fu_637_p1(24 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_port_reg_data_0_val <= data_0_val;
                ap_port_reg_data_10_val <= data_10_val;
                ap_port_reg_data_11_val <= data_11_val;
                ap_port_reg_data_12_val <= data_12_val;
                ap_port_reg_data_13_val <= data_13_val;
                ap_port_reg_data_1_val <= data_1_val;
                ap_port_reg_data_2_val <= data_2_val;
                ap_port_reg_data_3_val <= data_3_val;
                ap_port_reg_data_4_val <= data_4_val;
                ap_port_reg_data_5_val <= data_5_val;
                ap_port_reg_data_6_val <= data_6_val;
                ap_port_reg_data_7_val <= data_7_val;
                ap_port_reg_data_8_val <= data_8_val;
                ap_port_reg_data_9_val <= data_9_val;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_583 <= grp_fu_231_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_587 <= grp_fu_233_p2(25 downto 10);
                reg_591 <= grp_fu_230_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_595 <= grp_fu_232_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_599 <= grp_fu_231_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then
                reg_603 <= grp_fu_233_p2(25 downto 10);
                reg_607 <= grp_fu_230_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_611 <= grp_fu_232_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                sext_ln42_3_reg_1009 <= sext_ln42_3_fu_818_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                sext_ln70_1_reg_989 <= sext_ln70_1_fu_767_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                trunc_ln42_15_reg_1014 <= grp_fu_232_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                trunc_ln42_5_reg_984 <= grp_fu_231_p2(25 downto 10);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_reset_idle_pp0, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_idle_pp0_1to1 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln58_113_fu_789_p2 <= std_logic_vector(unsigned(grp_fu_615_p2) + unsigned(add_ln58_fu_783_p2));
    add_ln58_114_fu_834_p2 <= std_logic_vector(unsigned(reg_611) + unsigned(reg_587));
    add_ln58_116_fu_840_p2 <= std_logic_vector(unsigned(grp_fu_615_p2) + unsigned(add_ln58_114_fu_834_p2));
    add_ln58_117_fu_913_p2 <= std_logic_vector(unsigned(add_ln58_116_reg_1024) + unsigned(add_ln58_113_reg_999));
    add_ln58_118_fu_870_p2 <= std_logic_vector(unsigned(trunc_ln42_15_reg_1014) + unsigned(reg_587));
    add_ln58_119_fu_881_p2 <= std_logic_vector(unsigned(reg_595) + unsigned(reg_611));
    add_ln58_120_fu_887_p2 <= std_logic_vector(unsigned(add_ln58_119_fu_881_p2) + unsigned(add_ln58_118_reg_1034));
    add_ln58_121_fu_739_p2 <= std_logic_vector(unsigned(reg_587) + unsigned(trunc_ln42_25_fu_729_p4));
    add_ln58_122_fu_666_p2 <= std_logic_vector(unsigned(reg_591) + unsigned(ap_const_lv16_364));
    add_ln58_123_fu_672_p2 <= std_logic_vector(unsigned(add_ln58_122_fu_666_p2) + unsigned(reg_583));
    add_ln58_124_fu_745_p2 <= std_logic_vector(unsigned(add_ln58_123_reg_959) + unsigned(add_ln58_121_fu_739_p2));
    add_ln58_125_fu_892_p2 <= std_logic_vector(unsigned(add_ln58_124_reg_974) + unsigned(add_ln58_120_fu_887_p2));
    add_ln58_126_fu_917_p2 <= std_logic_vector(unsigned(add_ln58_125_reg_1044) + unsigned(add_ln58_117_fu_913_p2));
    add_ln58_127_fu_795_p2 <= std_logic_vector(unsigned(reg_599) + unsigned(reg_591));
    add_ln58_128_fu_801_p2 <= std_logic_vector(unsigned(trunc_ln42_5_reg_984) + unsigned(reg_607));
    add_ln58_129_fu_806_p2 <= std_logic_vector(unsigned(add_ln58_128_fu_801_p2) + unsigned(add_ln58_127_fu_795_p2));
    add_ln58_130_fu_846_p2 <= std_logic_vector(unsigned(reg_583) + unsigned(reg_591));
    add_ln58_131_fu_852_p2 <= std_logic_vector(unsigned(reg_599) + unsigned(reg_607));
    add_ln58_132_fu_858_p2 <= std_logic_vector(unsigned(add_ln58_131_fu_852_p2) + unsigned(add_ln58_130_fu_846_p2));
    add_ln58_133_fu_922_p2 <= std_logic_vector(unsigned(add_ln58_132_reg_1029) + unsigned(add_ln58_129_reg_1004));
    add_ln58_134_fu_875_p2 <= std_logic_vector(unsigned(reg_583) + unsigned(reg_591));
    add_ln58_135_fu_897_p2 <= std_logic_vector(unsigned(reg_591) + unsigned(reg_587));
    add_ln58_136_fu_903_p2 <= std_logic_vector(unsigned(add_ln58_135_fu_897_p2) + unsigned(add_ln58_134_reg_1039));
    add_ln58_137_fu_750_p2 <= std_logic_vector(unsigned(reg_591) + unsigned(reg_595));
    add_ln58_138_fu_678_p2 <= std_logic_vector(signed(sext_ln42_8_fu_663_p1) + signed(ap_const_lv16_5EB));
    add_ln58_139_fu_684_p2 <= std_logic_vector(unsigned(add_ln58_138_fu_678_p2) + unsigned(reg_587));
    add_ln58_140_fu_756_p2 <= std_logic_vector(unsigned(add_ln58_139_reg_964) + unsigned(add_ln58_137_fu_750_p2));
    add_ln58_141_fu_908_p2 <= std_logic_vector(unsigned(add_ln58_140_reg_979) + unsigned(add_ln58_136_fu_903_p2));
    add_ln58_142_fu_926_p2 <= std_logic_vector(unsigned(add_ln58_141_reg_1049) + unsigned(add_ln58_133_fu_922_p2));
    add_ln58_fu_783_p2 <= std_logic_vector(unsigned(reg_583) + unsigned(reg_587));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage1_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage2_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage3_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage4_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage5_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage6_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage7_subdone <= (ap_const_logic_0 = ap_ce);
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= add_ln58_126_fu_917_p2;
    ap_return_1 <= add_ln58_142_fu_926_p2;

    grp_fu_230_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, sext_ln42_5_reg_1019, sext_ln42_7_fu_632_p1, sext_ln70_2_fu_652_p1, sext_ln73_fu_690_p1, sext_ln42_fu_761_p1, sext_ln42_1_fu_772_p1, sext_ln73_2_fu_812_p1, sext_ln42_4_fu_823_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_230_p0 <= sext_ln42_5_reg_1019(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_230_p0 <= sext_ln42_4_fu_823_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_230_p0 <= sext_ln73_2_fu_812_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_230_p0 <= sext_ln42_1_fu_772_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_230_p0 <= sext_ln42_fu_761_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_230_p0 <= sext_ln73_fu_690_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_230_p0 <= sext_ln70_2_fu_652_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_230_p0 <= sext_ln42_7_fu_632_p1(16 - 1 downto 0);
            else 
                grp_fu_230_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_230_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_230_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_230_p1 <= ap_const_lv26_2D5(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_230_p1 <= ap_const_lv26_3FFFA34(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_230_p1 <= ap_const_lv26_3FFF72B(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_230_p1 <= ap_const_lv26_608(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_230_p1 <= ap_const_lv26_82C(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_230_p1 <= ap_const_lv26_3FFF8F2(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_230_p1 <= ap_const_lv26_10D(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_230_p1 <= ap_const_lv26_56A(14 - 1 downto 0);
            else 
                grp_fu_230_p1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_230_p1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_231_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, sext_ln70_fu_647_p1, sext_ln70_reg_954, sext_ln73_1_reg_969, sext_ln70_1_reg_989, sext_ln42_2_reg_994, sext_ln42_3_reg_1009, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, sext_ln73_4_fu_621_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_231_p0 <= sext_ln42_3_reg_1009(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_231_p0 <= sext_ln42_2_reg_994(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_231_p0 <= sext_ln70_1_reg_989(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_231_p0 <= sext_ln73_1_reg_969(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_231_p0 <= sext_ln70_reg_954(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_231_p0 <= sext_ln70_fu_647_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_231_p0 <= sext_ln73_4_fu_621_p1(16 - 1 downto 0);
            else 
                grp_fu_231_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_231_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_231_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_231_p1 <= ap_const_lv26_3FFF54A(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_231_p1 <= ap_const_lv26_3FFF740(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_231_p1 <= ap_const_lv26_1CA(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_231_p1 <= ap_const_lv26_3FFF640(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_231_p1 <= ap_const_lv26_12F(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_231_p1 <= ap_const_lv26_3FFFB69(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_231_p1 <= ap_const_lv26_3FFFA40(13 - 1 downto 0);
            else 
                grp_fu_231_p1 <= "XXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_231_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_232_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, sext_ln73_1_fu_696_p1, sext_ln70_1_fu_767_p1, sext_ln42_2_fu_778_p1, sext_ln42_3_fu_818_p1, sext_ln42_5_fu_829_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, sext_ln70_3_fu_627_p1, sext_ln42_6_fu_658_p1, sext_ln73_3_fu_864_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_232_p0 <= sext_ln73_3_fu_864_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_232_p0 <= sext_ln42_5_fu_829_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_232_p0 <= sext_ln42_3_fu_818_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_232_p0 <= sext_ln42_2_fu_778_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_232_p0 <= sext_ln70_1_fu_767_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_232_p0 <= sext_ln73_1_fu_696_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_232_p0 <= sext_ln42_6_fu_658_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_232_p0 <= sext_ln70_3_fu_627_p1(16 - 1 downto 0);
            else 
                grp_fu_232_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_232_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_232_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_232_p1 <= ap_const_lv26_3FFF8C9(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_232_p1 <= ap_const_lv26_3FFF5FA(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_232_p1 <= ap_const_lv26_33E(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_232_p1 <= ap_const_lv26_757(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_232_p1 <= ap_const_lv26_3FFFC69(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_232_p1 <= ap_const_lv26_3FFF5F2(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_232_p1 <= ap_const_lv26_3FFF446(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_232_p1 <= ap_const_lv25_1FFFF05(13 - 1 downto 0);
            else 
                grp_fu_232_p1 <= "XXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_232_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_233_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, sext_ln70_2_fu_652_p1, sext_ln73_fu_690_p1, sext_ln42_fu_761_p1, sext_ln42_1_fu_772_p1, sext_ln73_2_fu_812_p1, sext_ln42_4_fu_823_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, sext_ln73_4_fu_621_p1, sext_ln73_3_fu_864_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_233_p0 <= sext_ln73_3_fu_864_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_233_p0 <= sext_ln42_4_fu_823_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_233_p0 <= sext_ln73_2_fu_812_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_233_p0 <= sext_ln42_1_fu_772_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_233_p0 <= sext_ln42_fu_761_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_233_p0 <= sext_ln73_fu_690_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_233_p0 <= sext_ln70_2_fu_652_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_233_p0 <= sext_ln73_4_fu_621_p1(16 - 1 downto 0);
            else 
                grp_fu_233_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_233_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_233_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_233_p1 <= ap_const_lv26_3FFFA29(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_233_p1 <= ap_const_lv26_3FFF524(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_233_p1 <= ap_const_lv26_3FFF7B7(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_233_p1 <= ap_const_lv26_3FFF66F(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_233_p1 <= ap_const_lv26_65F(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_233_p1 <= ap_const_lv26_7C7(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_233_p1 <= ap_const_lv26_312(13 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_233_p1 <= ap_const_lv26_3FFF952(13 - 1 downto 0);
            else 
                grp_fu_233_p1 <= "XXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_233_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_615_p2 <= std_logic_vector(unsigned(reg_595) + unsigned(reg_603));
        sext_ln42_1_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_5_val),26));

        sext_ln42_2_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_6_val),26));

        sext_ln42_3_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_8_val),26));

        sext_ln42_4_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_9_val),26));

        sext_ln42_5_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_10_val),26));

    sext_ln42_6_fu_658_p0 <= ap_port_reg_data_13_val;
        sext_ln42_6_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln42_6_fu_658_p0),26));

    sext_ln42_7_fu_632_p0 <= data_15_val;
        sext_ln42_7_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln42_7_fu_632_p0),26));

        sext_ln42_8_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln42_30_reg_943),16));

        sext_ln42_fu_761_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_3_val),26));

        sext_ln70_1_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_4_val),26));

        sext_ln70_2_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_12_val),26));

    sext_ln70_3_fu_627_p0 <= data_15_val;
        sext_ln70_3_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln70_3_fu_627_p0),25));

        sext_ln70_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_0_val),26));

        sext_ln73_1_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_2_val),26));

        sext_ln73_2_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_7_val),26));

        sext_ln73_3_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_11_val),26));

        sext_ln73_4_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_14_val),26));

        sext_ln73_5_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_701_p3),26));

        sext_ln73_6_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_712_p3),26));

        sext_ln73_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_1_val),26));

    sub_ln73_fu_723_p2 <= std_logic_vector(signed(sext_ln73_6_fu_719_p1) - signed(sext_ln73_5_fu_708_p1));
    tmp_1_fu_712_p3 <= (data_13_val_read_reg_948 & ap_const_lv5_0);
    tmp_fu_701_p3 <= (data_13_val_read_reg_948 & ap_const_lv9_0);
    trunc_ln42_25_fu_729_p4 <= sub_ln73_fu_723_p2(25 downto 10);
    trunc_ln42_30_fu_637_p1 <= grp_fu_232_p2(25 - 1 downto 0);
end behav;
